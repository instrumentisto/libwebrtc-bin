name: CI

on:
  push:
    branches: ["main"]
    tags: ["*"]
  pull_request:
    branches: ["main"]
    paths-ignore: ["**.md"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  ############
  # Building #
  ############

  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: android
          - os: ios
          - os: linux
            arch: arm64
          - os: linux
            arch: x64
          - os: macos
            arch: arm64
          - os: macos
            arch: x64
          - os: windows
            arch: x64
    runs-on: ${{ ((matrix.os == 'ios' || matrix.os == 'macos') && 'macos-11')
                 || (matrix.os == 'windows' && 'windows-2019')
                 || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3

      - run: ./disk_cleanup.sh
        if: ${{ matrix.os == 'android' || matrix.os == 'linux' }}
      - run: .\disk_cleanup.bat
        if: ${{ matrix.os == 'windows' }}

      - run: make -C docker ${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}
        if: ${{ matrix.os == 'android' || matrix.os == 'linux' }}
      - run: make -C build USE_CCACHE=0 ${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}
        if: ${{ matrix.os == 'ios' || matrix.os == 'macos' }}
      - run: .\build.windows.bat
        if: ${{ matrix.os == 'windows' }}

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: package/libwebrtc-${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}.tar.gz
          if-no-files-found: error




  #############
  # Releasing #
  #############

  release-github:
    name: Release on GitHub
    needs: ["build"]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Parse release version
        id: release
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Verify release version matches VERSION file
        run: >-
          test "${{ steps.release.outputs.VERSION }}" \
             == $(grep 'WEBRTC_VERSION=' VERSION | cut -d '=' -f2 | tr -d '\n')
        if: ${{ !contains(steps.release.outputs.VERSION, '-') }}

      - uses: actions/download-artifact@v3
        with:
          name: build
          path: package/

      - name: Generate SHA256 checksums
        run: ls -1 | xargs -I {} sh -c "sha256sum {} > {}.sha256sum"
        working-directory: package/

      - uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.release.outputs.VERSION }}
          files: |
            package/libwebrtc-*.tar.gz
            package/libwebrtc-*.tar.gz.sha256sum
          fail_on_unmatched_files: true
          prerelease: ${{ contains(steps.release.outputs.VERSION, '-') }}
