name: CI

on:
  push:
    branches: ["main"]
    tags: ["*"]
  pull_request:
    branches: ["main"]
    paths-ignore: ["**.md"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  ############
  # Building #
  ############

  # build:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - os: android
  #         - os: ios
  #         - os: linux
  #           arch: arm64
  #         - os: linux
  #           arch: x64
  #         - os: macos
  #           arch: arm64
  #         - os: macos
  #           arch: x64
  #         - os: windows
  #           arch: x64
  #   runs-on: ${{ ((matrix.os == 'ios' || matrix.os == 'macos') && 'macos-11')
  #                || (matrix.os == 'windows' && 'windows-2019')
  #                || 'ubuntu-latest' }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - run: ./disk_cleanup.sh
  #       if: ${{ matrix.os == 'android' || matrix.os == 'linux' }}
  #     - run: powershell .\disk_cleanup.bat
  #       if: ${{ matrix.os == 'windows' }}

  #     - run: make -C docker ${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}
  #       if: ${{ matrix.os == 'android' || matrix.os == 'linux' }}
  #     - run: make -C build USE_CCACHE=0 ${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}
  #       if: ${{ matrix.os == 'ios' || matrix.os == 'macos' }}
  #     - run: powershell .\build.windows.bat
  #       if: ${{ matrix.os == 'windows' }}

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: build
  #         path: package/libwebrtc-${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}.${{ (matrix.os == 'ios' && 'zip') || 'tar.gz' }}
  #         if-no-files-found: error




  # #############
  # # Releasing #
  # #############

  # publish-cocoapods:
  #   name: publish (CocoaPods)
  #   if: ${{ startsWith(github.ref, 'refs/tags/') }}
  #   needs: ["release-github"]
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: maxim-lobanov/setup-cocoapods@v1
  #       with:
  #         version: latest

  #     - run: pod spec lint --allow-warnings --verbose
  #     - run: pod trunk push --allow-warnings
  #       env:
  #         COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

  publish-android:
    name: publish (Android)
    # if: ${{ startsWith(github.ref, 'refs/tags/') }}
    # needs: ["release-github"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages


      # - uses: actions/download-artifact@v3
      #   with:
      #     name: build
      #     path: package/libwebrtc-android.tar.gz

      - run: mkdir -p package/
      - run: cd package/ && curl -fL -O "https://github.com/instrumentisto/libwebrtc-bin/releases/download/116.0.5845.179/libwebrtc-android.tar.gz"
      - run: cd package && tar xf libwebrtc-android.tar.gz && ls
      - run: ls

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - run: |
          mvn install:install-file \
            -DgroupId=com.github.instrumentisto \
            -DartifactId=libwebrtc-bin \
            -Dversion=116.0.5845.179 \
            -Dfile=./package/aar/libwebrtc.aar \
            -Dpackaging=aar \
            -DgeneratePom=true \
            -DlocalRepositoryPath=. \
            -DcreateChecksum=true

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Publish android `libwebrtc-${{ steps.release.outputs.version }}`.
          create_branch: false

  # release-github:
  #   name: release (GitHub)
  #   if: ${{ startsWith(github.ref, 'refs/tags/') }}
  #   needs: ["build"]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Parse release version
  #       id: release
  #       run: echo "version=${GITHUB_REF#refs/tags/}"
  #            >> $GITHUB_OUTPUT
  #     - name: Verify release version matches VERSION file
  #       run: |
  #         test "${{ steps.release.outputs.version }}" \
  #           == "$(grep 'WEBRTC_VERSION=' VERSION | cut -d '=' -f2 | tr -d '\n')"
  #       if: ${{ !contains(steps.release.outputs.version, '-') }}

  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: build
  #         path: package/

  #     - name: Generate SHA256 checksums
  #       run: ls -1 | xargs -I {} sh -c "sha256sum {} > {}.sha256sum"
  #       working-directory: package/
  #     - name: Show generated SHA256 checksums
  #       run: cat *.sha256sum
  #       working-directory: package/

  #     - name: Create GitHub release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         name: ${{ steps.release.outputs.version }}
  #         files: |
  #           package/libwebrtc-*.tar.gz
  #           package/libwebrtc-*.tar.gz.sha256sum
  #           package/libwebrtc-*.zip
  #           package/libwebrtc-*.zip.sha256sum
  #         fail_on_unmatched_files: true
  #         prerelease: ${{ contains(steps.release.outputs.version, '-') }}
