name: CI

on:
  push:
    branches: ["main"]
    tags: ["*"]
  pull_request:
    branches: ["main"]
    paths-ignore: ["**.md", "LICENSE"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  ############
  # Building #
  ############

  build:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: android
          - os: ios
          - os: linux
            arch: arm64
          - os: linux
            arch: x64
          - os: macos
            arch: arm64
          - os: macos
            arch: x64
          #- os: windows
    runs-on: ${{ (contains(['ios', 'macos'], matrix.os) && 'macos-11')
                 || (matrix.os == 'windows' && 'windows-19')
                 || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set target
        id: build
        run: echo ::set-output name=TARGET::${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}

      - run: ./disk_cleanup.sh
        if: ${{ contains(['android', 'linux'], matrix.os) }}
      - run: .\disk_cleanup.bat
        if: ${{ matrix.os == 'windows' }}

      - run: mkdir -p package/ && touch package/libwebrtc-${{ steps.build.outputs.TARGET }}.tar.gz
#      - run: make -C docker ${{ steps.build.outputs.TARGET }}
#        if: ${{ contains(['android', 'linux'], matrix.os) }}
#      - run: make -C build USE_CCACHE=0 ${{ steps.build.outputs.TARGET }}
#        if: ${{ contains(['ios', 'macos'], matrix.os) }}
#      - run: .\build.windows.bat
#        if: ${{ matrix.os == 'windows' }}

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: package/libwebrtc-${{ steps.build.outputs.TARGET }}.tar.gz
          if-no-files-found: error
        #if: ${{ startsWith(github.ref, 'refs/tags/') }}




  #############
  # Releasing #
  #############

  release-github:
    name: Release on GitHub
    needs: ["build"]
    #if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: package/

      - name: Generate SHA256 checksums
        run: ls -1 | xargs -I {} sh -c "sha256sum {} > {}.sha256sum"
        working-directory: package/

      - run: ls -l package/

#      - name: Upload ${{ matrix.name }} Release asset
#        uses: ncipollo/release-action@v1
#        with:
#          name: Release m${{ github.ref }}
#          allowUpdates: true
#          draft: false
#          prerelease: false
#          artifacts: "libwebrtc-${{ matrix.name }}.tar.gz,libwebrtc-${{ matrix.name }}.tar.gz.sha256sum"
#          token: ${{ secrets.GITHUB_TOKEN }}
