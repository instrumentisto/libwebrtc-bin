name: build

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        name:
          - linux-arm64
          - linux-x64
          - android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Disk Cleanup
        run: ./disk_cleanup.sh
      - name: Build
        run: make -C docker ${{ matrix.name }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-${{ matrix.name }}.tar.xz
          path: package/libwebrtc-${{ matrix.name }}.tar.xz

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        name:
          - macos-arm64
          - macos-x64
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: make -C build USE_CCACHE=0 ${{ matrix.name }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-${{ matrix.name }}.tar.xz
          path: package/libwebrtc-${{ matrix.name }}.tar.xz

  build-windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Disk Cleanup
        run: .\disk_cleanup.bat
      - name: Build
        run: .\build.windows.bat
      - name: Upload artifact x64
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-win-x64.tar.xz
          path: package/libwebrtc-win-x64.tar.xz

  build-ios:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: make -C build USE_CCACHE=0 ios
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-ios.tar.xz
          path: package/libwebrtc-ios.tar.xz

  release:
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        name:
          - linux-arm64
          - linux-x64
          - macos-arm64
          - macos-x64
          - android
          - ios
          - win-x64
    name: Release ${{ matrix.name }}
    if: contains(github.ref, 'tags/')
    needs:
     - build-linux
     - build-macos
     - build-windows
     - build-ios
    runs-on: ubuntu-latest
    steps:
      - name: Download ${{ matrix.name }}
        uses: actions/download-artifact@v2
        with:
          name: libwebrtc-${{ matrix.name }}.tar.xz
      - name: Upload ${{ matrix.name }} Release asset
        uses: ncipollo/release-action@v1
        with:
          name: Release m${{ github.ref }}
          allowUpdates: true
          draft: false
          prerelease: false
          artifactContentType: application/x-xz
          artifacts: libwebrtc-${{ matrix.name }}.tar.xz
          token: ${{ secrets.GITHUB_TOKEN }}
