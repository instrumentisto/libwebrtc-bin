diff --git a/.github/ISSUE_TEMPLATE/bug_report.md b/.github/ISSUE_TEMPLATE/bug_report.md
deleted file mode 100644
index 2f6e002..0000000
--- a/.github/ISSUE_TEMPLATE/bug_report.md
+++ /dev/null
@@ -1,28 +0,0 @@
----
-name: Bug report
-about: Create a report to help us improve
-title: ''
-labels: ''
-assignees: ''
-
----
-
-> **Warning**
-> Do not write a request for help, as it is not a help center.
-
-**Describe the bug**
-A clear and concise description of what the bug is.
-
-**To Reproduce**
-Steps to reproduce the behavior:
-
-**Expected behavior**
-A clear and concise description of what you expected to happen.
-
-**Environment (please complete the following information):**
- - OS: [e.g. Ubuntu 20.04]
- - Commit Hash
- - Used release package file name
-
-**Additional context**
-Add any other context about the problem here.
diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
deleted file mode 100644
index e59e4fc..0000000
--- a/.github/workflows/build.yml
+++ /dev/null
@@ -1,147 +0,0 @@
-name: build
-
-on:
-  push:
-    paths-ignore:
-      - '**.md'
-      - 'LICENSE'
-  pull_request:
-
-jobs:
-  build-linux:
-    strategy:
-      fail-fast: false
-      matrix:
-        name:
-          - linux-arm
-          - linux-arm64
-          - linux-x64
-          - android
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v3
-      - name: Disk Cleanup
-        run: ./disk_cleanup.sh
-      - name: Build
-        run: make -C docker ${{ matrix.name }}
-      - name: Upload artifact
-        uses: actions/upload-artifact@v3
-        with:
-          name: libwebrtc-${{ matrix.name }}.tar.xz
-          path: package/libwebrtc-${{ matrix.name }}.tar.xz
-
-  build-macos:
-    strategy:
-      fail-fast: false
-      matrix:
-        name:
-          - macos-arm64
-          - macos-x64
-    runs-on: macos-11
-    steps:
-      - uses: actions/checkout@v3
-      - name: Build
-        run: make -C build USE_CCACHE=0 ${{ matrix.name }}
-      - name: Upload artifact
-        uses: actions/upload-artifact@v3
-        with:
-          name: libwebrtc-${{ matrix.name }}.tar.xz
-          path: package/libwebrtc-${{ matrix.name }}.tar.xz
-
-  build-windows:
-    runs-on: windows-2019
-    steps:
-      - uses: actions/checkout@v3
-      - name: Disk Cleanup
-        run: .\disk_cleanup.bat
-      - name: Build
-        run: .\build.windows.bat
-      - name: Upload artifact x64
-        uses: actions/upload-artifact@v3
-        with:
-          name: libwebrtc-win-x64.7z
-          path: package/libwebrtc-win-x64.7z
-      - name: Upload artifact x86
-        uses: actions/upload-artifact@v3
-        with:
-          name: libwebrtc-win-x86.7z
-          path: package/libwebrtc-win-x86.7z
-
-  build-ios:
-    runs-on: macos-11
-    steps:
-      - uses: actions/checkout@v3
-      - name: Build
-        run: make -C build USE_CCACHE=0 ios
-      - name: Upload artifact
-        uses: actions/upload-artifact@v3
-        with:
-          name: libwebrtc-ios.zip
-          path: package/libwebrtc-ios.zip
-
-  release:
-    strategy:
-      fail-fast: false
-      max-parallel: 1
-      matrix:
-        name:
-          - linux-arm
-          - linux-arm64
-          - linux-x64
-          - macos-arm64
-          - macos-x64
-          - android
-          - ios
-          - win-x64
-          - win-x86
-        include:
-          - name: linux-arm
-            ext: tar.xz
-            type: application/x-xz
-          - name: linux-arm64
-            ext: tar.xz
-            type: application/x-xz
-          - name: linux-x64
-            ext: tar.xz
-            type: application/x-xz
-          - name: macos-arm64
-            ext: tar.xz
-            type: application/x-xz
-          - name: macos-x64
-            ext: tar.xz
-            type: application/x-xz
-          - name: android
-            ext: tar.xz
-            type: application/x-xz
-          - name: ios
-            ext: zip
-            type: application/zip
-          - name: win-x64
-            ext: 7z
-            type: application/x-7z-compressed
-          - name: win-x86
-            ext: 7z
-            type: application/x-7z-compressed
-    name: Release ${{ matrix.name }}
-    if: contains(github.ref, 'tags/')
-    needs:
-     - build-linux
-     - build-macos
-     - build-windows
-     - build-ios
-    runs-on: ubuntu-latest
-    steps:
-      - name: Download ${{ matrix.name }}
-        uses: actions/download-artifact@v3
-        with:
-          name: libwebrtc-${{ matrix.name }}.${{ matrix.ext }}
-      - name: Upload ${{ matrix.name }} Release asset
-        uses: ncipollo/release-action@v1
-        with:
-          name: Release m${{ github.ref }}
-          allowUpdates: true
-          draft: false
-          prerelease: false
-          artifactContentType: ${{ matrix.type }}
-          artifacts: libwebrtc-${{ matrix.name }}.${{ matrix.ext }}
-          token: ${{ secrets.PERSONAL_TOKEN }}
diff --git a/.github/workflows/close_inactive_issues.yml b/.github/workflows/close_inactive_issues.yml
deleted file mode 100644
index 0eb34a9..0000000
--- a/.github/workflows/close_inactive_issues.yml
+++ /dev/null
@@ -1,19 +0,0 @@
-name: Close inactive issues
-on:
-  schedule:
-    - cron: "30 1 * * *"
-
-jobs:
-  close-issues:
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/stale@v6
-        with:
-          days-before-issue-stale: 30
-          days-before-issue-close: 14
-          stale-issue-label: "stale"
-          stale-issue-message: "This issue is stale because it has been open for 30 days with no activity."
-          close-issue-message: "This issue was closed because it has been inactive for 14 days since being marked as stale."
-          days-before-pr-stale: -1
-          days-before-pr-close: -1
-          repo-token: ${{ secrets.GITHUB_TOKEN }}
diff --git a/.gitignore b/.gitignore
index 59848b3..fd59470 100644
--- a/.gitignore
+++ b/.gitignore
@@ -122,5 +122,3 @@ webrtc_build/
 
 # Backup files produced by CLI tools
 *.bk
-depot_tools/
-7z/
diff --git a/build.windows.ps1 b/build.windows.ps1
index 8dfa694..a2f02b5 100644
--- a/build.windows.ps1
+++ b/build.windows.ps1
@@ -5,6 +5,23 @@
 
 $ErrorActionPreference = "Stop"
 
+# Wraps native commands to handle their errors.
+# Original:
+#   https://stackoverflow.com/a/48999101/1828012
+#   https://stackoverflow.com/a/52784160/1828012
+function Exec
+{
+  [CmdletBinding()]
+  param(
+    [Parameter(Position=0,Mandatory=1)][scriptblock]$cmd,
+    [int[]]$SuccessCodes = @(0)
+  )
+  & $cmd
+  if (($SuccessCodes -notcontains $LastExitCode) -and ($ErrorActionPreference -eq "Stop")) {
+    exit $LastExitCode
+  }
+}
+
 # VERSIONファイル読み込み
 $lines = get-content VERSION
 foreach($line in $lines){
@@ -49,25 +66,20 @@ $Env:GYP_MSVS_VERSION = "2019"
 $Env:DEPOT_TOOLS_WIN_TOOLCHAIN = "0"
 $Env:PYTHONIOENCODING = "utf-8"
 
+# depot_tools
 if (Test-Path $DEPOT_TOOLS_DIR) {
-  Remove-Item $DEPOT_TOOLS_DIR -Force -Recurse
-}
-if (Test-Path $WEBRTC_DIR) {
-  Remove-Item $WEBRTC_DIR -Force -Recurse
-}
-if (Test-Path $BUILD_DIR) {
-  Remove-Item $BUILD_DIR -Force -Recurse
-}
-if (Test-Path $PACKAGE_DIR) {
-  Remove-Item $PACKAGE_DIR -Force -Recurse
+  Push-Location $DEPOT_TOOLS_DIR
+    Exec { git checkout . }
+    Exec { git clean -df . }
+    Exec { git pull . }
+  Pop-Location
+} else {
+  Exec { git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git }
 }
 
-# depot_tools
-git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
-
 $Env:PATH = "$DEPOT_TOOLS_DIR;$Env:PATH"
 # Choco へのパスを削除
-$Env:PATH = $Env:Path.Replace("C:\ProgramData\Chocolatey\bin;", "")
+$Env:PATH = $Env:Path.Replace("C:\ProgramData\Chocolatey\bin;", "");
 
 # WebRTC のソース取得
 New-Item $WEBRTC_DIR -ItemType Directory -Force
@@ -103,7 +115,6 @@ if (!(Test-Path $BUILD_DIR)) {
 
 Exec { gclient sync --with_branch_heads -r $WEBRTC_COMMIT }
 Exec { git apply --ignore-space-change -v $PATCH_DIR\add_licenses.patch }
-Exec { git apply --ignore-space-change -v $PATCH_DIR\4k.patch }
 Exec { git apply --ignore-space-change -v $PATCH_DIR\webrtc_voice_engine.patch }
 Exec { git apply --ignore-space-change -v $PATCH_DIR\win_dynamic_crt.patch }
 Exec { git apply --ignore-space-change -v $PATCH_DIR\windows_fix_towupper.patch }
@@ -144,11 +155,10 @@ foreach ($build in @("debug_x64", "release_x64")) {
   Move-Item $BUILD_DIR\$build\webrtc.lib $BUILD_DIR\$build\obj\webrtc.lib -Force
 }
 
-# バージョンファイルコピー
-New-Item $BUILD_DIR\package\webrtc -ItemType Directory -Force
-$WEBRTC_VERSION | Out-File $BUILD_DIR\package\webrtc\VERSION
-
 # WebRTC のヘッダーだけをパッケージングする
+if (Test-Path $BUILD_DIR\package) {
+  Remove-Item -Force -Recurse -Path $BUILD_DIR\package
+}
 New-Item $BUILD_DIR\package\webrtc\include -ItemType Directory -Force
 Exec { robocopy "$WEBRTC_DIR\src" "$BUILD_DIR\package\webrtc\include" *.h *.hpp /S /NP /NS /NC /NFL /NDL } -SuccessCodes @(1)
 
@@ -161,7 +171,7 @@ $WEBRTC_VERSION | Out-File $BUILD_DIR\package\webrtc\VERSION
 
 # ライセンス生成 (x64)
 Push-Location $WEBRTC_DIR\src
-  vpython3 tools_webrtc\libs\generate_licenses.py --target :webrtc "$BUILD_DIR\" "$BUILD_DIR\debug_x64" "$BUILD_DIR\release_x64"
+  Exec { vpython3 tools_webrtc\libs\generate_licenses.py --target :webrtc "$BUILD_DIR\" "$BUILD_DIR\debug_x64" "$BUILD_DIR\release_x64" }
 Pop-Location
 Copy-Item "$BUILD_DIR\LICENSE.md" "$BUILD_DIR\package\webrtc\NOTICE"
 
diff --git a/build/android/Makefile b/build/android/Makefile
index c13773f..c9bb496 100644
--- a/build/android/Makefile
+++ b/build/android/Makefile
@@ -19,8 +19,7 @@ EXTRA_GN_ARGS := \
 	is_component_build=false \
 	rtc_enable_protobuf=false \
 	rtc_build_json=true \
-	use_rtti=true \
-	use_custom_libcxx=false
+	use_rtti=true
 
 .PHONY: all
 all: clean build package
@@ -56,16 +55,14 @@ copy:
 
 .PHONY: patch
 patch: common-patch
-	cd $(SRC_DIR) && \
-	patch -p2 < $(PATCH_DIR)/disable_use_hermetic_xcode_on_linux.patch && \
-	patch -p2 < $(PATCH_DIR)/android_version.patch && \
-	patch -p2 < $(PATCH_DIR)/android_use_libunwind.patch && \
-	$(SCRIPTS_DIR)/generate_android_version.sh $(SRC_DIR) $(WEBRTC_COMMIT) $(WEBRTC_VERSION)
+	cd $(SRC_DIR) \
+	&& patch -p2 < $(PATCH_DIR)/android_version.patch \
+	&& $(SCRIPTS_DIR)/generate_android_version.sh $(SRC_DIR) $(WEBRTC_COMMIT) $(WEBRTC_VERSION)
 
 
 define build-android
 	cd $(SRC_DIR) && \
-	gn gen $(BUILD_DIR)/static/$1 --args='$(EXTRA_GN_ARGS) use_custom_libcxx=false $(CC_WRAPPER) target_os="android" target_cpu="$2" $3' && \
+	gn gen $(BUILD_DIR)/static/$1 --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER) target_os="android" target_cpu="$2" $3' && \
 	ninja -C $(BUILD_DIR)/static/$1 && \
 	ninja -C $(BUILD_DIR)/static/$1 native_api
 
@@ -77,11 +74,11 @@ endef
 .PHONY: build
 build: patch
 	cd $(SRC_DIR) && \
-	vpython3 $(SRC_DIR)/tools_webrtc/android/build_aar.py \
-	  --build-dir $(BUILD_DIR)/aar \
-	  --output $(BUILD_DIR)/libwebrtc.aar \
-	  --arch armeabi-v7a arm64-v8a x86_64 \
-	  --extra-gn-args '$(EXTRA_GN_ARGS) $(CC_WRAPPER)'
+	python3 $(SRC_DIR)/tools_webrtc/android/build_aar.py \
+		--build-dir $(BUILD_DIR)/aar \
+		--output $(BUILD_DIR)/libwebrtc.aar \
+		--arch armeabi-v7a arm64-v8a x86_64 \
+		--extra-gn-args '$(EXTRA_GN_ARGS) $(CC_WRAPPER)'
 
 	$(call build-android,armeabi-v7a,arm,arm_version=7)
 	$(call build-android,arm64-v8a,arm64)
diff --git a/build/common.mk b/build/common.mk
index da2fa3c..2f966e7 100644
--- a/build/common.mk
+++ b/build/common.mk
@@ -37,8 +37,7 @@ common-patch:
 	&& patch -p2 < $(PATCH_DIR)/macos_h264_encoder.patch \
 	&& patch -p2 < $(PATCH_DIR)/disable_use_hermetic_xcode_on_linux.patch \
 	&& patch -p2 < $(PATCH_DIR)/linux_is_pod_deprecate.patch \
-	&& patch -p2 < $(PATCH_DIR)/add_licenses.patch \
-	&& patch -p2 < $(PATCH_DIR)/4k.patch
+	&& patch -p2 < $(PATCH_DIR)/add_licenses.patch
 
 .PHONY: common-package
 common-package: copy
diff --git a/build/ios/Makefile b/build/ios/Makefile
index 92b58b9..1f65440 100644
--- a/build/ios/Makefile
+++ b/build/ios/Makefile
@@ -28,9 +28,6 @@ package:
 
 .PHONY: patch
 patch: common-patch
-	echo "apply iOS patches ..." && \
-	cd $(SRC_DIR) && \
-	patch -p2 < $(PATCH_DIR)/macos_h264_encoder.patch
 
 .PHONY: build
 build: patch
diff --git a/build/linux-arm/Makefile b/build/linux-arm/Makefile
deleted file mode 100644
index 9e9662b..0000000
--- a/build/linux-arm/Makefile
+++ /dev/null
@@ -1,51 +0,0 @@
-include ../../VERSION
-
-BASE_DIR := $(realpath ../..)
-
-include ../env.mk
-
-TARGET_OS ?= linux
-TARGET_CPU ?= arm
-
-include ../common.mk
-
-EXTRA_GN_ARGS := \
-	target_os="$(TARGET_OS)" \
-	target_cpu="$(TARGET_CPU)" \
-	is_debug=false \
-	$(RTC_USE_H264) \
-	$(RTC_USE_X11) \
-	rtc_include_tests=false \
-	rtc_build_tools=false \
-	rtc_build_examples=false \
-	rtc_use_pipewire=false \
-	rtc_build_json=true \
-	use_rtti=true \
-	use_custom_libcxx=false \
-	use_custom_libcxx_for_host=false
-
-.PHONY: all
-all: clean build package
-
-.PHONY: package
-package: common-package
-
-.PHONY: copy
-copy: common-copy
-
-.PHONY: patch
-patch: common-patch
-	cd $(SRC_DIR) && \
-	patch -p2 < $(PATCH_DIR)/4k_linux.patch && \
-	patch -p2 < $(PATCH_DIR)/disable_use_hermetic_xcode_on_linux.patch && \
-	patch -p2 < $(PATCH_DIR)/linux_is_pod_deprecate.patch
-
-.PHONY: build
-build: download patch
-	cd $(SRC_DIR) && \
-	gn gen $(BUILD_DIR) --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER)' && \
-	ninja -C $(BUILD_DIR)
-
-	cd $(BUILD_DIR)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR)/obj/libwebrtc.a `find . -name '*.o'`
-
diff --git a/build/linux-arm64/Makefile b/build/linux-arm64/Makefile
index 7015f99..1510cda 100644
--- a/build/linux-arm64/Makefile
+++ b/build/linux-arm64/Makefile
@@ -34,10 +34,6 @@ copy: common-copy
 
 .PHONY: patch
 patch: common-patch
-	cd $(SRC_DIR) && \
-	patch -p2 < $(PATCH_DIR)/4k_linux.patch && \
-	patch -p2 < $(PATCH_DIR)/disable_use_hermetic_xcode_on_linux.patch && \
-	patch -p2 < $(PATCH_DIR)/linux_is_pod_deprecate.patch
 
 .PHONY: build
 build: download patch
@@ -46,9 +42,3 @@ build: download patch
 	gn gen $(BUILD_DIR_RELEASE) --args='$(EXTRA_GN_ARGS) is_debug=false $(CC_WRAPPER)' && \
 	ninja -C $(BUILD_DIR_DEBUG) && \
 	ninja -C $(BUILD_DIR_RELEASE)
-
-	cd $(BUILD_DIR_DEBUG)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_DEBUG)/obj/libwebrtc.a `find . -name '*.o'`
-
-	cd $(BUILD_DIR_RELEASE)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_RELEASE)/obj/libwebrtc.a `find . -name '*.o'`
\ No newline at end of file
diff --git a/build/linux-x64/Makefile b/build/linux-x64/Makefile
index f9d1f97..7804635 100644
--- a/build/linux-x64/Makefile
+++ b/build/linux-x64/Makefile
@@ -34,10 +34,6 @@ copy: common-copy
 
 .PHONY: patch
 patch: common-patch
-	cd $(SRC_DIR) && \
-	patch -p2 < $(PATCH_DIR)/4k_linux.patch && \
-	patch -p2 < $(PATCH_DIR)/disable_use_hermetic_xcode_on_linux.patch && \
-	patch -p2 < $(PATCH_DIR)/linux_is_pod_deprecate.patch
 
 .PHONY: build
 build: download patch
@@ -46,9 +42,3 @@ build: download patch
 	gn gen $(BUILD_DIR_RELEASE) --args='$(EXTRA_GN_ARGS) is_debug=false $(CC_WRAPPER)' && \
 	ninja -C $(BUILD_DIR_DEBUG) && \
 	ninja -C $(BUILD_DIR_RELEASE)
-	
-	cd $(BUILD_DIR_DEBUG)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_DEBUG)/obj/libwebrtc.a `find . -name '*.o'`
-
-	cd $(BUILD_DIR_RELEASE)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_RELEASE)/obj/libwebrtc.a `find . -name '*.o'`
\ No newline at end of file
diff --git a/build/macos-arm64/Makefile b/build/macos-arm64/Makefile
index 69ca0b1..a7df9c2 100644
--- a/build/macos-arm64/Makefile
+++ b/build/macos-arm64/Makefile
@@ -25,7 +25,7 @@ EXTRA_GN_ARGS := \
 	is_component_build=false \
 	use_rtti=true \
 	use_custom_libcxx=false \
-	use_custom_libcxx_for_host=false
+    use_custom_libcxx_for_host=false
 
 .PHONY: all
 all: clean build package
@@ -40,8 +40,6 @@ copy: common-copy
 
 .PHONY: patch
 patch: common-patch
-	cd $(SRC_DIR) && \
-	patch -p2 < $(PATCH_DIR)/macos_h264_encoder.patch
 
 .PHONY: build
 build: patch
diff --git a/build/macos-x64/Makefile b/build/macos-x64/Makefile
index 61f3f82..ea31989 100644
--- a/build/macos-x64/Makefile
+++ b/build/macos-x64/Makefile
@@ -25,7 +25,7 @@ EXTRA_GN_ARGS := \
 	is_component_build=false \
 	use_rtti=true \
 	use_custom_libcxx=false \
-	use_custom_libcxx_for_host=false
+    use_custom_libcxx_for_host=false
 
 .PHONY: all
 all: clean build package
@@ -40,8 +40,6 @@ copy: common-copy
 
 .PHONY: patch
 patch: common-patch
-	cd $(SRC_DIR) && \
-	patch -p2 < $(PATCH_DIR)/macos_h264_encoder.patch
 
 .PHONY: build
 build: patch
diff --git a/disk_cleanup.ps1 b/disk_cleanup.ps1
index 711986a..b8303cf 100644
--- a/disk_cleanup.ps1
+++ b/disk_cleanup.ps1
@@ -1,13 +1,24 @@
-Get-PSDrive
+$ErrorActionPreference = "Stop"
 
-# Cache 済み Docker Image の削除
-docker rmi $(docker images -q -a)
+Get-PSDrive
 
 # Android SDK の削除
-Remove-Item -Recurse -Force $Env:ANDROID_NDK_HOME
+if (($Env:ANDROID_HOME -ne $null) -and (Test-Path $Env:ANDROID_HOME)) {
+  (Get-Item $Env:ANDROID_HOME).Delete()
+}
+if (($Env:ANDROID_NDK_HOME -ne $null) -and (Test-Path $Env:ANDROID_NDK_HOME)) {
+  (Get-Item $Env:ANDROID_NDK_HOME).Delete()
+}
 
 # JVM の削除
-Remove-Item -Recurse -Force $Env:JAVA_HOME_11_X64
-Remove-Item -Recurse -Force $Env:JAVA_HOME_8_X64
+if (($Env:JAVA_HOME_11_X64 -ne $null) -and (Test-Path $Env:JAVA_HOME_11_X64)) {
+  Remove-Item -Recurse -Force $Env:JAVA_HOME_11_X64
+}
+if (($Env:JAVA_HOME_8_X64 -ne $null) -and (Test-Path $Env:JAVA_HOME_8_X64)) {
+  Remove-Item -Recurse -Force $Env:JAVA_HOME_8_X64
+}
+if (($Env:JAVA_HOME_7_X64 -ne $null) -and (Test-Path $Env:JAVA_HOME_7_X64)) {
+  Remove-Item -Recurse -Force $Env:JAVA_HOME_7_X64
+}
 
 Get-PSDrive
diff --git a/docker/Makefile b/docker/Makefile
index 020e8ef..aff43ed 100644
--- a/docker/Makefile
+++ b/docker/Makefile
@@ -1,7 +1,7 @@
 ifeq (,$(shell ls .. | grep VERSION))
 
 BASE_DIR := $(CURDIR)
-USE_CCACHE ?= 1
+USE_CCACHE ?= 0
 
 include $(BASE_DIR)/VERSION
 
diff --git a/docker/android/Dockerfile b/docker/android/Dockerfile
index a87b855..25f44a8 100644
--- a/docker/android/Dockerfile
+++ b/docker/android/Dockerfile
@@ -6,23 +6,20 @@ RUN rm -f /etc/apt/apt.conf.d/docker-clean \
  && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' \
     > /etc/apt/apt.conf.d/keep-cache
 
-RUN \
-  apt update \
-  && apt upgrade -y \
-  && apt install -y \
-    build-essential \
-    curl \
-    git \
-    libncurses5 \
-    lsb-release \
-    python \
-    pkg-config \
-    rsync \
-    sudo \
-    openjdk-11-jdk-headless \
-    time \
-    unzip \
-    cmake
+RUN apt update \
+ && apt upgrade -y \
+ && apt install -y build-essential \
+                   curl \
+                   git \
+                   libncurses5 \
+                   lsb-release \
+                   openjdk-11-jdk-headless \
+                   python \
+                   pkg-config \
+                   rsync \
+                   sudo \
+                   time \
+                   unzip
 
 RUN update-java-alternatives -s java-1.11.0-openjdk-amd64
 
diff --git a/docker/linux-arm/Dockerfile b/docker/linux-arm/Dockerfile
deleted file mode 100644
index 7fd2b44..0000000
--- a/docker/linux-arm/Dockerfile
+++ /dev/null
@@ -1,30 +0,0 @@
-# syntax = docker/dockerfile:experimental
-FROM ubuntu:20.04
-
-ENV DEBIAN_FRONTEND=noninteractive
-
-RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
-
-RUN \
-  apt update \
-  && apt upgrade -y \
-  && apt install -y \
-    build-essential \
-    curl \
-    git \
-    libncurses5 \
-    lsb-release \
-    python \
-    pkg-config \
-    rsync \
-    cmake
-
-COPY config/linux-arm/ /root/config/linux-arm/
-COPY build/ /root/build/
-COPY Makefile VERSION LICENSE /root/
-COPY scripts/ /root/scripts/
-
-RUN \
-  cd /root \
-  && make -C build linux-arm.fetch
-
diff --git a/docker/linux-arm64/Dockerfile b/docker/linux-arm64/Dockerfile
index 1b45e2d..011c7ed 100644
--- a/docker/linux-arm64/Dockerfile
+++ b/docker/linux-arm64/Dockerfile
@@ -6,19 +6,16 @@ RUN rm -f /etc/apt/apt.conf.d/docker-clean \
  && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' \
     > /etc/apt/apt.conf.d/keep-cache
 
-RUN \
-  apt update \
-  && apt upgrade -y \
-  && apt install -y \
-    build-essential \
-    curl \
-    git \
-    libncurses5 \
-    lsb-release \
-    python \
-    pkg-config \
-    rsync \
-    cmake
+RUN apt update \
+ && apt upgrade -y \
+ && apt install -y build-essential \
+                   curl \
+                   git \
+                   libncurses5 \
+                   lsb-release \
+                   python \
+                   pkg-config \
+                   rsync
 
 COPY build/ /root/build/
 COPY Makefile VERSION /root/
diff --git a/docker/linux-x64/Dockerfile b/docker/linux-x64/Dockerfile
index 6ae7806..4f15f37 100644
--- a/docker/linux-x64/Dockerfile
+++ b/docker/linux-x64/Dockerfile
@@ -6,19 +6,16 @@ RUN rm -f /etc/apt/apt.conf.d/docker-clean \
  && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' \
     > /etc/apt/apt.conf.d/keep-cache
 
-RUN \
-  apt update \
-  && apt upgrade -y \
-  && apt install -y \
-    build-essential \
-    curl \
-    git \
-    libncurses5 \
-    lsb-release \
-    python \
-    pkg-config \
-    rsync \
-    cmake
+RUN apt update \
+ && apt upgrade -y \
+ && apt install -y build-essential \
+                   curl \
+                   git \
+                   libncurses5 \
+                   lsb-release \
+                   python \
+                   pkg-config \
+                   rsync
 
 COPY build/ /root/build/
 COPY Makefile VERSION /root/
diff --git a/patch/4k.patch b/patch/4k.patch
deleted file mode 100644
index e9716c3..0000000
--- a/patch/4k.patch
+++ /dev/null
@@ -1,19 +0,0 @@
-# Copyright 2018-2019, Shiguredo Inc, tnoho and melpon and kdxu
-# from https://github.com/shiguredo/momo/blob/develop/patch/4k.patch
-
-diff --git a/src/video/config/encoder_stream_factory.cc b/src/video/config/encoder_stream_factory.cc
-index fceadf09b4..a73b7e9f6f 100644
---- a/src/video/config/encoder_stream_factory.cc
-+++ b/src/video/config/encoder_stream_factory.cc
-@@ -86,8 +86,10 @@ static int GetMaxDefaultVideoBitrateKbps(int width,
-     max_bitrate = 1700;
-   } else if (width * height <= 960 * 540) {
-     max_bitrate = 2000;
--  } else {
-+  } else if (width * height <= 1920 * 1080) {
-     max_bitrate = 2500;
-+  } else {
-+    max_bitrate = 15000;
-   }
-   if (is_screenshare)
-     max_bitrate = std::max(max_bitrate, 1200);
diff --git a/patch/4k_linux.patch b/patch/4k_linux.patch
deleted file mode 100644
index 1bd2b44..0000000
--- a/patch/4k_linux.patch
+++ /dev/null
@@ -1,21 +0,0 @@
-# Copyright 2018-2019, Shiguredo Inc, tnoho and melpon and kdxu
-# from https://github.com/shiguredo/momo/blob/develop/patch/4k.patch
-
-diff --git a/src/modules/video_capture/linux/device_info_v4l2.cc b/src/modules/video_capture/linux/device_info_v4l2.cc
-index 39f72b0..3cb1226 100644
---- a/src/modules/video_capture/linux/device_info_v4l2.cc
-+++ b/src/modules/video_capture/linux/device_info_v4l2.cc
-@@ -232,11 +232,11 @@ int32_t DeviceInfoV4l2::FillCapabilities(int fd) {
-   unsigned int videoFormats[] = {V4L2_PIX_FMT_MJPEG, V4L2_PIX_FMT_YUV420,
-                                  V4L2_PIX_FMT_YUYV, V4L2_PIX_FMT_UYVY};
- 
--  int sizes = 13;
-+  int sizes = 14;
-   unsigned int size[][2] = {{128, 96},   {160, 120},  {176, 144},  {320, 240},
-                             {352, 288},  {640, 480},  {704, 576},  {800, 600},
-                             {960, 720},  {1280, 720}, {1024, 768}, {1440, 1080},
--                            {1920, 1080}};
-+                            {1920, 1080}, {3840, 2160}};
- 
-   for (int fmts = 0; fmts < totalFmts; fmts++) {
-     for (int i = 0; i < sizes; i++) {
diff --git a/patch/android_use_libunwind.patch b/patch/android_use_libunwind.patch
deleted file mode 100644
index 2442837..0000000
--- a/patch/android_use_libunwind.patch
+++ /dev/null
@@ -1,26 +0,0 @@
-diff --git a/src/build/config/BUILD.gn b/src/build/config/BUILD.gn
-index 265d4bc07..71ec29437 100644
---- a/src/build/config/BUILD.gn
-+++ b/src/build/config/BUILD.gn
-@@ -241,6 +241,8 @@ group("common_deps") {
- 
-   if (use_custom_libcxx) {
-     public_deps += [ "//buildtools/third_party/libc++" ]
-+  } else {
-+    public_deps += [ "//buildtools/third_party/libunwind" ]
-   }
- 
-   if (use_afl) {
-diff --git a/src/buildtools/third_party/libunwind/BUILD.gn b/src/buildtools/third_party/libunwind/BUILD.gn
-index a8287bf..a948450 100644
---- a/src/buildtools/third_party/libunwind/BUILD.gn
-+++ b/src/buildtools/third_party/libunwind/BUILD.gn
-@@ -20,7 +20,7 @@ config("libunwind_config") {
- }
- 
- source_set("libunwind") {
--  visibility = []
-+  visibility = ["//build/config:common_deps"]
-   if (is_fuchsia) {
-     visibility += [ "//buildtools/third_party/libc++abi" ]
-   } else if (is_android) {
diff --git a/patch/ios_disable_mllvm.patch b/patch/ios_disable_mllvm.patch
new file mode 100644
index 0000000..8f4e01e
--- /dev/null
+++ b/patch/ios_disable_mllvm.patch
@@ -0,0 +1,13 @@
+diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
+index 8048ec5e8..24dc5a678 100644
+--- a/build/config/compiler/BUILD.gn
++++ b/build/config/compiler/BUILD.gn
+@@ -534,7 +534,7 @@ config("compiler") {
+     ldflags += [ "-Wl,-z,keep-text-section-prefix" ]
+   }
+ 
+-  if (is_clang && !is_nacl && current_os != "zos") {
++  if (is_clang && !is_nacl && current_os != "zos" && !is_ios) {
+     cflags += [ "-fcrash-diagnostics-dir=" + clang_diagnostic_dir ]
+ 
+     # TODO(hans): Remove this once Clang generates better optimized debug info
diff --git a/patch/linux_is_pod_deprecate.patch b/patch/linux_is_pod_deprecate.patch
index 2fff925..35b059e 100644
--- a/patch/linux_is_pod_deprecate.patch
+++ b/patch/linux_is_pod_deprecate.patch
@@ -37,3 +37,4 @@ index 261ffb11c1..442bd5204c 100644
  
  // Note: if any pointers are added to this struct or its sub-structs, it
  // must be fitted with a copy-constructor. This is because it is copied
+ 
\ No newline at end of file
diff --git a/patch/windows_fix_abseil.patch b/patch/windows_fix_abseil.patch
index e62d619..6545f35 100644
--- a/patch/windows_fix_abseil.patch
+++ b/patch/windows_fix_abseil.patch
@@ -1,7 +1,7 @@
-diff --git a/third_party/abseil-cpp/absl/types/internal/optional.h b/third_party/abseil-cpp/absl/types/internal/optional.h
+diff --git a/src/third_party/abseil-cpp/absl/types/internal/optional.h b/src/third_party/abseil-cpp/absl/types/internal/optional.h
 index 6ed0c669..681acb7a 100644
---- a/third_party/abseil-cpp/absl/types/internal/optional.h
-+++ b/third_party/abseil-cpp/absl/types/internal/optional.h
+--- a/src/third_party/abseil-cpp/absl/types/internal/optional.h
++++ b/src/third_party/abseil-cpp/absl/types/internal/optional.h
 @@ -179,8 +179,8 @@ class optional_data_base : public optional_data_dtor_base<T> {
  // Also, we should be checking is_trivially_copyable here, which is not
  // supported now, so we use is_trivially_* traits instead.
diff --git a/patch/windows_fix_towupper.patch b/patch/windows_fix_towupper.patch
index bbb6cd9..feac3c7 100644
--- a/patch/windows_fix_towupper.patch
+++ b/patch/windows_fix_towupper.patch
@@ -1,13 +1,13 @@
-diff --git a/src/modules/desktop_capture/win/full_screen_win_application_handler.cc b/src/modules/desktop_capture/win/full_screen_win_application_handler.cc
-index f7047dba06..4222dfc01e 100644
---- a/src/modules/desktop_capture/win/full_screen_win_application_handler.cc
-+++ b/src/modules/desktop_capture/win/full_screen_win_application_handler.cc
-@@ -11,6 +11,7 @@
- #include "modules/desktop_capture/win/full_screen_win_application_handler.h"
- 
- #include <algorithm>
-+#include <cwctype>
- #include <memory>
- #include <string>
- #include <vector>
+diff --git a/src/modules/desktop_capture/win/full_screen_win_application_handler.cc b/src/modules/desktop_capture/win/full_screen_win_application_handler.cc
+index f7047dba06..4222dfc01e 100644
+--- a/src/modules/desktop_capture/win/full_screen_win_application_handler.cc
++++ b/src/modules/desktop_capture/win/full_screen_win_application_handler.cc
+@@ -11,6 +11,7 @@
+ #include "modules/desktop_capture/win/full_screen_win_application_handler.h"
+ 
+ #include <algorithm>
++#include <cwctype>
+ #include <memory>
+ #include <string>
+ #include <vector>
  
\ No newline at end of file
diff --git a/.editorconfig b/.editorconfig
deleted file mode 100644
index 444a832..0000000
--- a/.editorconfig
+++ /dev/null
@@ -1,39 +0,0 @@
-root = true
-
-[*]
-charset = utf-8
-end_of_line = lf
-trim_trailing_whitespace = true
-insert_final_newline = true
-max_line_length = 80
-
-[*.md]
-indent_style = space
-indent_size = 4
-trim_trailing_whitespace = false
-max_line_length = off
-
-[*.sh]
-indent_style = space
-indent_size = 2
-
-[*.{bat,ps1}]
-indent_style = space
-indent_size = 2
-max_line_length = off
-
-[*.{yaml,yml}]
-indent_style = space
-indent_size = 2
-
-[{Makefile,*.mk}]
-indent_style = tab
-indent_size = 4
-
-[*.podspec]
-indent_style = space
-indent_size = 2
-
-[Dockerfile]
-indent_style = space
-indent_size = 4
diff --git a/.github/dependabot.yml b/.github/dependabot.yml
deleted file mode 100644
index 253bcb7..0000000
--- a/.github/dependabot.yml
+++ /dev/null
@@ -1,6 +0,0 @@
-version: 2
-updates:
-  - package-ecosystem: github-actions
-    directory: /
-    schedule:
-      interval: daily
diff --git a/.github/workflows/check-new-ver.yml b/.github/workflows/check-new-ver.yml
deleted file mode 100644
index 9f78453..0000000
--- a/.github/workflows/check-new-ver.yml
+++ /dev/null
@@ -1,27 +0,0 @@
-name: Check new version
-
-on:
-  schedule:
-    - cron: "30 5 * * 1"
-
-jobs:
-  check:
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v3
-
-      - run: ./upgrade-ver.sh
-        id: new
-
-      - name: Create Pull Request
-        uses: peter-evans/create-pull-request@v4
-        with:
-          commit-message: Upgrade to ${{ steps.new.outputs.version }} version
-          branch: upgrade-to-${{ steps.new.outputs.version }}
-          delete-branch: true
-          title: Upgrade to ${{ steps.new.outputs.version }}
-          body: Upgrade `libwebrtc` version to ${{ steps.new.outputs.version }}.
-          labels: |
-            enhancement
-            k::version
-          token: ${{ secrets.GH_INSTRUMENTISTO_BOT_PAT }}
diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
deleted file mode 100644
index e702eed..0000000
--- a/.github/workflows/ci.yml
+++ /dev/null
@@ -1,124 +0,0 @@
-name: CI
-
-on:
-  push:
-    branches: ["main"]
-    tags: ["*"]
-  pull_request:
-    branches: ["main"]
-    paths-ignore: ["**.md"]
-
-concurrency:
-  group: ${{ github.workflow }}-${{ github.ref }}
-  cancel-in-progress: true
-
-jobs:
-
-  ############
-  # Building #
-  ############
-
-  build:
-    strategy:
-      fail-fast: false
-      matrix:
-        include:
-          - os: android
-          - os: ios
-          - os: linux
-            arch: arm64
-          - os: linux
-            arch: x64
-          - os: macos
-            arch: arm64
-          - os: macos
-            arch: x64
-          - os: windows
-            arch: x64
-    runs-on: ${{ ((matrix.os == 'ios' || matrix.os == 'macos') && 'macos-11')
-                 || (matrix.os == 'windows' && 'windows-2019')
-                 || 'ubuntu-latest' }}
-    steps:
-      - uses: actions/checkout@v3
-
-      - run: ./disk_cleanup.sh
-        if: ${{ matrix.os == 'android' || matrix.os == 'linux' }}
-      - run: .\disk_cleanup.bat
-        if: ${{ matrix.os == 'windows' }}
-
-      - run: make -C docker ${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}
-        if: ${{ matrix.os == 'android' || matrix.os == 'linux' }}
-      - run: make -C build USE_CCACHE=0 ${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}
-        if: ${{ matrix.os == 'ios' || matrix.os == 'macos' }}
-      - run: .\build.windows.bat
-        if: ${{ matrix.os == 'windows' }}
-
-      - uses: actions/upload-artifact@v3
-        with:
-          name: build
-          path: package/libwebrtc-${{ matrix.os }}${{ matrix.arch != '' && format('-{0}', matrix.arch) || '' }}.${{ (matrix.os == 'ios' && 'zip') || 'tar.gz' }}
-          if-no-files-found: error
-
-
-
-
-  #############
-  # Releasing #
-  #############
-
-  publish-cocoapods:
-    name: publish to CocoaPods
-    needs: ["release-github"]
-    if: ${{ startsWith(github.ref, 'refs/tags/') }}
-    runs-on: macos-latest
-    steps:
-      - uses: actions/checkout@v3
-      - uses: maxim-lobanov/setup-cocoapods@v1
-        with:
-          version: latest
-
-      - run: pod spec lint --allow-warnings --verbose
-      - run: pod trunk push --allow-warnings
-        env:
-          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
-
-  release-github:
-    name: release on GitHub
-    needs: ["build"]
-    if: ${{ startsWith(github.ref, 'refs/tags/') }}
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v3
-
-      - name: Parse release version
-        id: release
-        run: echo "version=${GITHUB_REF#refs/tags/}"
-             >> $GITHUB_OUTPUT
-      - name: Verify release version matches VERSION file
-        run: |
-          test "${{ steps.release.outputs.version }}" \
-            == "$(grep 'WEBRTC_VERSION=' VERSION | cut -d '=' -f2 | tr -d '\n')"
-        if: ${{ !contains(steps.release.outputs.version, '-') }}
-
-      - uses: actions/download-artifact@v3
-        with:
-          name: build
-          path: package/
-
-      - name: Generate SHA256 checksums
-        run: ls -1 | xargs -I {} sh -c "sha256sum {} > {}.sha256sum"
-        working-directory: package/
-      - name: Show generated SHA256 checksums
-        run: cat *.sha256sum
-        working-directory: package/
-
-      - uses: softprops/action-gh-release@v1
-        with:
-          name: ${{ steps.release.outputs.version }}
-          files: |
-            package/libwebrtc-*.tar.gz
-            package/libwebrtc-*.tar.gz.sha256sum
-            package/libwebrtc-*.zip
-            package/libwebrtc-*.zip.sha256sum
-          fail_on_unmatched_files: true
-          prerelease: ${{ contains(steps.release.outputs.version, '-') }}
diff --git a/.gitignore b/.gitignore
index 59848b3..23448d8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -119,8 +119,5 @@ package/
 webrtc/
 webrtc-cache/
 webrtc_build/
-
-# Backup files produced by CLI tools
-*.bk
 depot_tools/
-7z/
+7z/
\ No newline at end of file
diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..117cc78
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright 2019 Zenichi Amano
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git a/LICENSE.md b/LICENSE.md
deleted file mode 100644
index 49c8607..0000000
--- a/LICENSE.md
+++ /dev/null
@@ -1,56 +0,0 @@
-Blue Oak Model License
-======================
-
-Version 1.0.0
-
-## Purpose
-
-This license gives everyone as much permission to work with
-this software as possible, while protecting contributors
-from liability.
-
-## Acceptance
-
-In order to receive this license, you must agree to its
-rules. The rules of this license are both obligations
-under that agreement and conditions to your license.
-You must not do anything with this software that triggers
-a rule that you cannot or will not follow.
-
-## Copyright
-
-Each contributor licenses you to do everything with this
-software that would otherwise infringe that contributor's
-copyright in it.
-
-## Notices
-
-You must ensure that everyone who gets a copy of
-any part of this software from you, with or without
-changes, also gets the text of this license or a link to
-<https://blueoakcouncil.org/license/1.0.0>.
-
-## Excuse
-
-If anyone notifies you in writing that you have not
-complied with [Notices](#notices), you can keep your
-license by taking all practical steps to comply within 30
-days after the notice.  If you do not do so, your license
-ends immediately.
-
-## Patent
-
-Each contributor licenses you to do everything with this
-software that would otherwise infringe any patent claims
-they can license or become able to license.
-
-## Reliability
-
-No contributor can revoke this license.
-
-## No Liability
-
-***As far as the law allows, this software comes as is,
-without any warranty or condition, and no contributor
-will be liable to anyone for any damages related to this
-software or this license, under any kind of legal claim.***
diff --git a/README.md b/README.md
index 75a0789..8fe2d52 100644
--- a/README.md
+++ b/README.md
@@ -1,51 +1,92 @@
-[`libwebrtc`] binaries
-======================
-
-[![CocoaPods](https://img.shields.io/cocoapods/v/instrumentisto-libwebrtc-bin "CocoaPods")](https://cocoapods.org/pods/instrumentisto-libwebrtc-bin)
-[![JitPack](https://jitpack.io/v/instrumentisto/libwebrtc-bin.svg "JitPack")](https://jitpack.io/#instrumentisto/libwebrtc-bin)
-[![CI](https://github.com/instrumentisto/libwebrtc-bin/workflows/CI/badge.svg?branch=main "CI")](https://github.com/instrumentisto/libwebrtc-bin/actions?query=workflow%3ACI+branch%3Amain)
-
-Build scripts for statically linked [`libwebrtc`] binaries, used by [Medea Flutter-WebRTC].
-
-
-
-
-## Build matrix
-
-|         |          x64           |         arm64          |
-|--------:|:----------------------:|:----------------------:| 
-| Android | `.aar` (`.a` + `.jar`) | `.aar` (`.a` + `.jar`) | 
-|     iOS |     `.xcframework`     |     `.xcframework`     | 
-|   Linux |          `.a`          |          `.a`          | 
-|   macOS |          `.a`          |          `.a`          | 
-| Windows |         `.lib`         |                        | 
-
+# libwebrtc binaries
+
+![build](https://github.com/crow-misia/libwebrtc-bin/workflows/build/badge.svg)
+[![JitPack](https://jitpack.io/v/crow-misia/libwebrtc-bin.svg)](https://jitpack.io/#crow-misia/libwebrtc-bin)
+[![License](https://img.shields.io/github/license/crow-misia/libwebrtc-bin)](LICENSE)
+
+This repository contains build scripts that can be used to build statically linked libwebrtc binaries.
+
+## Status
+
+The following table displays the current state of this project, including
+supported platforms and architectures.
+
+## Status
+
+<table>
+  <tr>
+    <td align="center"></td>
+    <td align="center">x86</td>
+    <td align="center">x64</td>
+    <td align="center">arm</td>
+    <td align="center">arm64</td>
+  </tr>
+  <tr>
+    <th align="center">Linux</th>
+    <td align="center">-</td>
+    <td align="center">✔</td>
+    <td align="center">✔</td>
+    <td align="center">✔</td>
+  </tr>
+  <tr>
+    <th align="center">macOS</th>
+    <td align="center">-</td>
+    <td align="center">✔</td>
+    <td align="center">-</td>
+    <td align="center">✔</td>
+  </tr>
+  <tr>
+    <th align="center">Windows</th>
+    <td align="center">✔</td>
+    <td align="center">✔</td>
+    <td align="center">-</td>
+    <td align="center">-</td>
+  </tr>
+  <tr>
+    <th align="center">iOS</th>
+    <td align="center">-</td>
+    <td align="center">✔</td>
+    <td align="center">-</td>
+    <td align="center">✔</td>
+  </tr>
+  <tr>
+    <th align="center">Android</th>
+    <td align="center">-</td>
+    <td align="center">✔</td>
+    <td align="center">✔</td>
+    <td align="center">✔</td>
+  </tr>
+</table>
+
+## Prerequisites
+
+- Make
+- Python 3.8 (optional for Windows since it will use the interpreter located
+  inside the `depot_tools` installation)
+
+## Building
+
+### Linux / macOS / iOS / Android
+
+```
+cd build
+make [options] [platform]
+```
+
+check `[options]` and `[platform]` by executing `make help`.
+
+### Windows
+
+```
+build.windows.bat
+```
 
+## License
 
+Apache License 2.0
 
-## References 
+## Reference
 
-- https://webrtc.googlesource.com/src
-- https://github.com/crow-misia/libwebrtc-bin
+- https://webrtc.googlesource.com/src/
 - https://github.com/aisouard/libwebrtc
 - https://github.com/shiguredo/shiguredo-webrtc-windows
-
-
-
-
-## License
-
-Copyright © 2022 Instrumentisto Team, <https://github.com/instrumentisto>
-
-This repository is subject to the terms of the [Blue Oak Model License 1.0.0](https://github.com/instrumentisto/libwebrtc-bin/blob/main/LICENSE.md). If a copy of the [BlueOak-1.0.0](https://spdx.org/licenses/BlueOak-1.0.0.html) license was not distributed with this file, You can obtain one at <https://blueoakcouncil.org/license/1.0.0>.
-
-Forked from [`crow-misia/libwebrtc-bin`](https://github.com/crow-misia/libwebrtc-bin), which is licensed under the [Apache License 2.0](https://github.com/crow-misia/libwebrtc-bin/blob/main/LICENSE).
-
-[`libwebrtc`] itself is licensed under the [BSD 3-Clause "New" or "Revised" License](https://webrtc.googlesource.com/src/+/refs/heads/main).
-
-
-
-
-[`crow-misia/libwebrtc-bin`]: https://github.com/crow-misia/libwebrtc-bin
-[`libwebrtc`]: https://webrtc.googlesource.com/src
-[Medea Flutter-WebRTC]: https://github.com/instrumentisto/flutter-webrtc
diff --git a/VERSION b/VERSION
index 1534ff6..ef21c1b 100644
--- a/VERSION
+++ b/VERSION
@@ -1,13 +1,10 @@
-CCACHE_VERSION=4.6
-
-# WebRTC doesn't have its own versioning, so we use Chromium versions:
-# https://chromiumdash.appspot.com/releases
-WEBRTC_VERSION=108.0.5359.124
-# Look for the concrete revision for WebRTC in:
-# https://chromium.googlesource.com/chromium/src/+/refs/tags/<WEBRTC_VERSION>/DEPS
+CCACHE_VERSION=4.7.2
+WEBRTC_VERSION=m108.5359{\#5}
+WEBRTC_SEMANTIC_VERSION=108.5359.5.0
 WEBRTC_COMMIT=93081d594f7efff72958a79251f53731b99e902b
 
 PACKAGE_NAMES= \
+  linux-arm \
   linux-arm64 \
   linux-x64 \
   macos-x64 \
@@ -16,6 +13,7 @@ PACKAGE_NAMES= \
   android
 
 DOCKER_PACKAGE_NAMES= \
+  linux-arm \
   linux-arm64 \
   linux-x64 \
   android
diff --git a/build.windows.ps1 b/build.windows.ps1
index 8dfa694..e005768 100644
--- a/build.windows.ps1
+++ b/build.windows.ps1
@@ -1,6 +1,5 @@
 # Copyright 2019, Shiguredo Inc, melpon and enm10k
 # Copyright 2019, Zenichi Amano
-# Copyright 2022, Instrumentisto Team, rogurotus and tyranron
 # original: https://github.com/shiguredo/shiguredo-webrtc-windows/blob/master/gabuild.ps1
 
 $ErrorActionPreference = "Stop"
@@ -15,25 +14,39 @@ foreach($line in $lines){
   }
 }
 
-if (!(Test-Path vswhere.exe)) {
-  Invoke-WebRequest -Uri "https://github.com/microsoft/vswhere/releases/download/2.8.4/vswhere.exe" -OutFile vswhere.exe
+$7Z_DIR = Join-Path (Resolve-Path ".").Path "7z"
+
+# 処理前に以前のファイルを削除する
+if (Test-Path vswhere.exe) {
+  Remove-Item vswhere.exe -Force
+}
+if (Test-Path $7Z_DIR) {
+    Remove-Item $7Z_DIR -Force -Recurse
 }
 
+Invoke-WebRequest -Uri "https://github.com/microsoft/vswhere/releases/download/3.0.3/vswhere.exe" -OutFile vswhere.exe
+
+Invoke-WebRequest -Uri "https://jaist.dl.sourceforge.net/project/sevenzip/7-Zip/22.01/7z2201-x64.exe" -OutFile 7z-x64.exe
+./7z-x64.exe /S /D="""$7Z_DIR"""
+
 # vsdevcmd.bat の設定を入れる
 # https://github.com/microsoft/vswhere/wiki/Find-VC
 $path = .\vswhere.exe -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
 if ($path) {
-  $batpath = Join-Path $path 'Common7\Tools\vsdevcmd.bat'
-  if (Test-Path $batpath) {
+  $batpath = join-path $path 'Common7\Tools\vsdevcmd.bat'
+  if (test-path $batpath) {
     cmd /s /c """$batpath"" $args && set" | Where-Object { $_ -match '(\w+)=(.*)' } | ForEach-Object {
-      $null = New-Item -Force -Path "Env:\$($Matches[1])" -Value $Matches[2]
+      $null = new-item -force -path "Env:\$($Matches[1])" -value $Matches[2]
     }
   }
-  # dbghelp.dll が無いと怒られてしまうので所定の場所にコピーする (管理者権限で実行する必要がある)
-  $debuggerpath = Join-Path $path "Common7\IDE\Extensions\TestPlatform\Extensions\Cpp\x64\dbghelp.dll"
-  if (!(Test-Path "C:\Program Files (x86)\Windows Kits\10\Debuggers\x64")) {
-    New-Item "C:\Program Files (x86)\Windows Kits\10\Debuggers\x64" -ItemType Directory -Force
-    Copy-Item $debuggerpath "C:\Program Files (x86)\Windows Kits\10\Debuggers\x64\dbghelp.dll"
+}
+
+# dbghelp.dll が無いと怒られてしまうので所定の場所にコピーする (管理者権限で実行する必要がある)
+foreach ($arch in @("x64", "x86")) {
+  $debuggerpath = join-path $path "Common7\IDE\Extensions\TestPlatform\Extensions\Cpp\$arch\dbghelp.dll"
+  if (!(Test-Path "C:\Program Files (x86)\Windows Kits\10\Debuggers\$arch")) {
+    New-Item "C:\Program Files (x86)\Windows Kits\10\Debuggers\$arch" -ItemType Directory -Force
+    Copy-Item $debuggerpath "C:\Program Files (x86)\Windows Kits\10\Debuggers\$arch\dbghelp.dll"
   }
 }
 
@@ -72,62 +85,46 @@ $Env:PATH = $Env:Path.Replace("C:\ProgramData\Chocolatey\bin;", "")
 # WebRTC のソース取得
 New-Item $WEBRTC_DIR -ItemType Directory -Force
 Push-Location $WEBRTC_DIR
-if (Test-Path .gclient) {
-  Push-Location src
-    Exec { git checkout . }
-    Exec { git clean -df }
-  Pop-Location
-
-  Push-Location src\build
-    Exec { git checkout . }
-    Exec { git clean -xdf }
-  Pop-Location
+  fetch --nohooks webrtc
 
-  Push-Location src\third_party
-    Exec { git checkout . }
-    Exec { git clean -df }
-  Pop-Location
-} else {
-  if (Test-Path $DEPOT_TOOLS_DIR\metrics.cfg) {
-    Remove-Item $DEPOT_TOOLS_DIR\metrics.cfg -Force
-  }
-  if (Test-Path src) {
-    Remove-Item src -Recurse -Force
-  }
-  Exec { fetch --nohooks webrtc }
-}
-
-if (!(Test-Path $BUILD_DIR)) {
   New-Item $BUILD_DIR -ItemType Directory -Force
-}
 
-Exec { gclient sync --with_branch_heads -r $WEBRTC_COMMIT }
-Exec { git apply --ignore-space-change -v $PATCH_DIR\add_licenses.patch }
-Exec { git apply --ignore-space-change -v $PATCH_DIR\4k.patch }
-Exec { git apply --ignore-space-change -v $PATCH_DIR\webrtc_voice_engine.patch }
-Exec { git apply --ignore-space-change -v $PATCH_DIR\win_dynamic_crt.patch }
-Exec { git apply --ignore-space-change -v $PATCH_DIR\windows_fix_towupper.patch }
-Exec { git apply --ignore-space-change -v $PATCH_DIR\windows_fix_abseil.patch }
+  Push-Location $WEBRTC_DIR\src
+    git checkout -f $WEBRTC_COMMIT
+    gclient sync
+
+    git apply --ignore-whitespace -p 2 $PATCH_DIR\4k.patch
+    git apply --ignore-whitespace -p 2 $PATCH_DIR\add_licenses.patch
+    git apply --ignore-whitespace -p 2 $PATCH_DIR\windows_fix_towupper.patch
+    git apply --ignore-whitespace $PATCH_DIR\windows_fix_abseil.patch
+  Pop-Location
 Pop-Location
 
 Get-PSDrive
 
 Push-Location $WEBRTC_DIR\src
   # WebRTC Debugビルド x64
-  Exec { gn gen $BUILD_DIR\debug_x64 --args='treat_warnings_as_errors=false rtc_use_h264=true rtc_include_tests=false rtc_build_tools=false rtc_build_examples=false is_component_build=false use_rtti=true use_custom_libcxx=false' }
-  Exec { ninja -C "$BUILD_DIR\debug_x64" }
+  gn gen $BUILD_DIR\debug_x64 --args='is_debug=true treat_warnings_as_errors=false rtc_use_h264=false rtc_include_tests=false rtc_build_tools=false rtc_build_examples=false is_component_build=false use_rtti=true use_custom_libcxx=false'
+  ninja -C "$BUILD_DIR\debug_x64"
 
   # WebRTC Releaseビルド x64
-  Exec { gn gen $BUILD_DIR\release_x64 --args='is_debug=false treat_warnings_as_errors=false rtc_use_h264=true rtc_include_tests=false rtc_build_tools=false rtc_build_examples=false is_component_build=false use_rtti=true strip_debug_info=true symbol_level=0 use_custom_libcxx=false' }
-  Exec { ninja -C "$BUILD_DIR\release_x64" }
+  gn gen $BUILD_DIR\release_x64 --args='is_debug=false treat_warnings_as_errors=false rtc_use_h264=false rtc_include_tests=false rtc_build_tools=false rtc_build_examples=false is_component_build=false use_rtti=true strip_debug_info=true symbol_level=0 use_custom_libcxx=false'
+  ninja -C "$BUILD_DIR\release_x64"
+
+  # WebRTC Debugビルド x86
+  gn gen $BUILD_DIR\debug_x86 --args='target_os=\"win\" target_cpu=\"x86\" is_debug=true treat_warnings_as_errors=false rtc_use_h264=false rtc_include_tests=false rtc_build_tools=false rtc_build_examples=false is_component_build=false use_rtti=true use_custom_libcxx=false'
+  ninja -C "$BUILD_DIR\debug_x86"
+
+  # WebRTC Releaseビルド x86
+  gn gen $BUILD_DIR\release_x86 --args='target_os=\"win\" target_cpu=\"x86\" is_debug=false treat_warnings_as_errors=false rtc_use_h264=false rtc_include_tests=false rtc_build_tools=false rtc_build_examples=false is_component_build=false use_rtti=true strip_debug_info=true symbol_level=0 use_custom_libcxx=false'
+  ninja -C "$BUILD_DIR\release_x86"
 Pop-Location
 
-foreach ($build in @("debug_x64", "release_x64")) {
-  Exec { ninja -C "$BUILD_DIR\$build" audio_device_module_from_input_and_output }
+foreach ($build in @("debug_x64", "release_x64", "debug_x86", "release_x86")) {
+  ninja -C "$BUILD_DIR\$build" audio_device_module_from_input_and_output
 
   # このままだと webrtc.lib に含まれないファイルがあるので、いくつか追加する
   Push-Location $BUILD_DIR\$build\obj
-  Exec {
     lib.exe `
       /out:$BUILD_DIR\$build\webrtc.lib webrtc.lib `
       api\task_queue\default_task_queue_factory\default_task_queue_factory_win.obj `
@@ -139,7 +136,6 @@ foreach ($build in @("debug_x64", "release_x64")) {
       modules\audio_device\audio_device_module_from_input_and_output\core_audio_output_win.obj `
       modules\audio_device\windows_core_audio_utility\core_audio_utility_win.obj `
       modules\audio_device\audio_device_name\audio_device_name.obj
-  }
   Pop-Location
   Move-Item $BUILD_DIR\$build\webrtc.lib $BUILD_DIR\$build\obj\webrtc.lib -Force
 }
@@ -150,14 +146,12 @@ $WEBRTC_VERSION | Out-File $BUILD_DIR\package\webrtc\VERSION
 
 # WebRTC のヘッダーだけをパッケージングする
 New-Item $BUILD_DIR\package\webrtc\include -ItemType Directory -Force
-Exec { robocopy "$WEBRTC_DIR\src" "$BUILD_DIR\package\webrtc\include" *.h *.hpp /S /NP /NS /NC /NFL /NDL } -SuccessCodes @(1)
+robocopy "$WEBRTC_DIR\src" "$BUILD_DIR\package\webrtc\include" *.h *.hpp /S /NP /NS /NC /NFL /NDL
 
 # ライブラリディレクトリ作成
 New-Item $BUILD_DIR\package\webrtc\debug -ItemType Directory -Force
 New-Item $BUILD_DIR\package\webrtc\release -ItemType Directory -Force
 
-# バージョンファイルコピー
-$WEBRTC_VERSION | Out-File $BUILD_DIR\package\webrtc\VERSION
 
 # ライセンス生成 (x64)
 Push-Location $WEBRTC_DIR\src
@@ -170,12 +164,24 @@ Copy-Item $BUILD_DIR\debug_x64\obj\webrtc.lib $BUILD_DIR\package\webrtc\debug\
 Copy-Item $BUILD_DIR\release_x64\obj\webrtc.lib $BUILD_DIR\package\webrtc\release\
 
 # ファイルを圧縮する
-if (!(Test-Path $PACKAGE_DIR)) {
-  New-Item $PACKAGE_DIR -ItemType Directory -Force
-}
-if (Test-Path $PACKAGE_DIR\libwebrtc-windows-x64.tar.gz) {
-  Remove-Item -Force -Path $PACKAGE_DIR\libwebrtc-windows-x64.tar.gz
-}
+New-Item $PACKAGE_DIR -ItemType Directory -Force
+Push-Location $BUILD_DIR\package\webrtc
+  cmd /s /c """$7Z_DIR\7z.exe""" a -bsp0 -t7z:r -ssc -ms+ $PACKAGE_DIR\libwebrtc-win-x64.7z *
+Pop-Location
+
+
+# ライセンス生成 (x86)
+Push-Location $WEBRTC_DIR\src
+  vpython3 tools_webrtc\libs\generate_licenses.py --target :webrtc "$BUILD_DIR\" "$BUILD_DIR\debug_x86" "$BUILD_DIR\release_x86"
+Pop-Location
+Copy-Item "$BUILD_DIR\LICENSE.md" "$BUILD_DIR\package\webrtc\NOTICE"
+
+# x86用ファイル一式作成
+Copy-Item $BUILD_DIR\debug_x86\obj\webrtc.lib $BUILD_DIR\package\webrtc\debug\
+Copy-Item $BUILD_DIR\release_x86\obj\webrtc.lib $BUILD_DIR\package\webrtc\release\
+
+# ファイルを圧縮する
+New-Item $PACKAGE_DIR -ItemType Directory -Force
 Push-Location $BUILD_DIR\package\webrtc
-  Exec { tar -czvf $PACKAGE_DIR\libwebrtc-windows-x64.tar.gz include debug release NOTICE VERSION }
+  cmd /s /c """$7Z_DIR\7z.exe""" a -bsp0 -t7z:r -ssc -ms+ $PACKAGE_DIR\libwebrtc-win-x86.7z *
 Pop-Location
diff --git a/build/Makefile b/build/Makefile
index 55ff51d..c99c41b 100644
--- a/build/Makefile
+++ b/build/Makefile
@@ -14,6 +14,8 @@ help:
 	@echo ""
 	@echo "<option>:"
 	@echo " - USE_CCACHE=1"
+	@echo " - USE_H264=1"
+	@echo " - USE_X11=1"
 	@echo ""
 	@echo "<packageName>:"
 	@for pkg in $(PACKAGE_NAMES); do echo " - $$pkg"; done
@@ -49,7 +51,7 @@ $(1).clean:
 	make -C $(1) clean
 
 $(1).fetch: depot_tools
-	$(SCRIPTS_DIR)/fetch_webrtc.sh $(WEBRTC_DIR) $(DEPOT_TOOLS_DIR) $(WEBRTC_COMMIT) $(1)
+	$(SCRIPTS_DIR)/fetch_webrtc.sh $(WEBRTC_DIR) $(DEPOT_TOOLS_DIR) $(WEBRTC_COMMIT) $(CONFIG_DIR)/$(1)
 
 .PHONY: $(1).build
 $(1).build: prepare $(CCACHE) $(1).fetch sync
diff --git a/build/android/Makefile b/build/android/Makefile
index c13773f..1b475d5 100644
--- a/build/android/Makefile
+++ b/build/android/Makefile
@@ -12,6 +12,7 @@ include ../common.mk
 EXTRA_GN_ARGS := \
 	is_debug=false \
 	is_java_debug=false \
+	$(RTC_USE_H264) \
 	rtc_build_tools=false \
 	rtc_build_examples=false \
 	rtc_include_tests=false \
@@ -19,8 +20,7 @@ EXTRA_GN_ARGS := \
 	is_component_build=false \
 	rtc_enable_protobuf=false \
 	rtc_build_json=true \
-	use_rtti=true \
-	use_custom_libcxx=false
+	use_rtti=true
 
 .PHONY: all
 all: clean build package
@@ -28,7 +28,7 @@ all: clean build package
 .PHONY: package
 package: copy
 	cd $(PACKAGE_DIR) && \
-	tar -czvf $(subst $(space),,$(PACKAGE_NAME)).tar.gz aar jar include lib NOTICE VERSION
+	tar -Jcf $(subst $(space),,$(PACKAGE_NAME)).tar.xz aar jar include lib NOTICE VERSION
 
 .PHONY: copy
 copy:
@@ -60,7 +60,7 @@ patch: common-patch
 	patch -p2 < $(PATCH_DIR)/disable_use_hermetic_xcode_on_linux.patch && \
 	patch -p2 < $(PATCH_DIR)/android_version.patch && \
 	patch -p2 < $(PATCH_DIR)/android_use_libunwind.patch && \
-	$(SCRIPTS_DIR)/generate_android_version.sh $(SRC_DIR) $(WEBRTC_COMMIT) $(WEBRTC_VERSION)
+	$(SCRIPTS_DIR)/generate_android_version.sh $(SRC_DIR) $(WEBRTC_COMMIT) $(WEBRTC_SEMANTIC_VERSION)
 
 
 define build-android
@@ -92,3 +92,4 @@ build: patch
 	rm -rf jni && \
 	rm -f AndroidManifest.xml && \
 	mv classes.jar libwebrtc.jar
+
diff --git a/build/common.mk b/build/common.mk
index da2fa3c..76e733a 100644
--- a/build/common.mk
+++ b/build/common.mk
@@ -18,6 +18,20 @@ ifneq (x$(TARGET_CPU),x)
 PACKAGE_NAME += -$(TARGET_CPU)
 endif
 
+ifeq ($(USE_H264),1)
+RTC_USE_H264 := rtc_use_h264=true
+PACKAGE_NAME += -h264
+else
+RTC_USE_H264 := rtc_use_h264=false
+endif
+
+ifeq ($(USE_X11),1)
+RTC_USE_X11 := rtc_use_x11=true
+PACKAGE_NAME += -x11
+else
+RTC_USE_X11 := rtc_use_x11=false
+endif
+
 .PHONY: common-clean
 clean:
 	rm -rf $(PACKAGE_DIR)/*
@@ -31,36 +45,29 @@ endif
 
 .PHONY: common-patch
 common-patch:
-	echo "apply patches ..." \
-	&& cd $(SRC_DIR) \
-	&& patch -p1 < $(PATCH_DIR)/nacl_armv6_2.patch \
-	&& patch -p2 < $(PATCH_DIR)/macos_h264_encoder.patch \
-	&& patch -p2 < $(PATCH_DIR)/disable_use_hermetic_xcode_on_linux.patch \
-	&& patch -p2 < $(PATCH_DIR)/linux_is_pod_deprecate.patch \
-	&& patch -p2 < $(PATCH_DIR)/add_licenses.patch \
-	&& patch -p2 < $(PATCH_DIR)/4k.patch
+	echo "apply patches ..." && \
+	cd $(SRC_DIR) && \
+	patch -p1 < $(PATCH_DIR)/nacl_armv6_2.patch && \
+	patch -p2 < $(PATCH_DIR)/4k.patch && \
+	patch -p2 < $(PATCH_DIR)/add_licenses.patch
 
 .PHONY: common-package
 common-package: copy
 	cd $(PACKAGE_DIR) && \
-	tar -czvf $(subst $(space),,$(PACKAGE_NAME)).tar.gz include debug release NOTICE VERSION
+	tar -Jcf $(subst $(space),,$(PACKAGE_NAME)).tar.xz include lib NOTICE VERSION
 
 .PHONY: generate-licenses
 generate-licenses:
-	python3 $(SRC_DIR)/tools_webrtc/libs/generate_licenses.py --target :webrtc $(BUILD_DIR_DEBUG) $(BUILD_DIR_RELEASE)
+	python3 $(SRC_DIR)/tools_webrtc/libs/generate_licenses.py --target :webrtc $(BUILD_DIR) $(BUILD_DIR)
 
 .PHONY: common-copy
 common-copy: generate-licenses
 	rm -rf $(PACKAGE_DIR)/{lib,include,NOTICE,VERSION}
-	mkdir -p $(PACKAGE_DIR)/debug
-	mkdir -p $(PACKAGE_DIR)/release
+	mkdir -p $(PACKAGE_DIR)/lib
 	mkdir -p $(PACKAGE_DIR)/include
-	cp $(BUILD_DIR_DEBUG)/obj/libwebrtc.a $(PACKAGE_DIR)/debug/libwebrtc.a
-	cp $(BUILD_DIR_DEBUG)/obj/third_party/boringssl/libboringssl.a $(PACKAGE_DIR)/debug/libboringssl.a
-	cp $(BUILD_DIR_RELEASE)/obj/libwebrtc.a $(PACKAGE_DIR)/release/libwebrtc.a
-	cp $(BUILD_DIR_RELEASE)/obj/third_party/boringssl/libboringssl.a $(PACKAGE_DIR)/release/libboringssl.a
+	cp $(BUILD_DIR)/obj/libwebrtc.a $(PACKAGE_DIR)/lib/libwebrtc.a
 
 	rsync -amv '--include=*/' '--include=*.h' '--include=*.hpp' '--exclude=*' $(SRC_DIR)/. $(PACKAGE_DIR)/include/.
 
-	cp -f $(BUILD_DIR_DEBUG)/LICENSE.md $(PACKAGE_DIR)/NOTICE
+	cp -f $(BUILD_DIR)/LICENSE.md $(PACKAGE_DIR)/NOTICE
 	echo '$(WEBRTC_VERSION)' > $(PACKAGE_DIR)/VERSION
diff --git a/build/env.mk b/build/env.mk
index f20abfe..ba5af4f 100644
--- a/build/env.mk
+++ b/build/env.mk
@@ -1,12 +1,12 @@
 USE_CCACHE ?= 1
+USE_H264 ?= 0
+USE_X11 ?= 0
 
-SUB_DIR_OPTS = USE_CCACHE=$(USE_CCACHE)
+SUB_DIR_OPTS = USE_CCACHE=$(USE_CCACHE) USE_H264=$(USE_H264) USE_X11=$(USE_X11)
 
 WEBRTC_DIR ?= $(BASE_DIR)/webrtc
 SRC_DIR ?= $(WEBRTC_DIR)/src
 BUILD_DIR ?= $(BASE_DIR)/webrtc_build
-BUILD_DIR_DEBUG ?= $(BUILD_DIR)/debug
-BUILD_DIR_RELEASE ?= $(BUILD_DIR)/release
 THIRD_PARTY_DIR ?= $(WEBRTC_DIR)/third_party
 CCACHE ?= $(THIRD_PARTY_DIR)/ccache$(CCACHE_VERSION)
 DEPOT_TOOLS_DIR ?= $(THIRD_PARTY_DIR)/depot_tools
diff --git a/build/ios/Makefile b/build/ios/Makefile
index 92b58b9..318057e 100644
--- a/build/ios/Makefile
+++ b/build/ios/Makefile
@@ -24,7 +24,7 @@ all: clean build package
 package:
 	mkdir -p $(PACKAGE_DIR) && \
 	cd $(BUILD_DIR) && \
-	zip -r $(PACKAGE_DIR)/$(subst $(space),,$(PACKAGE_NAME)).zip WebRTC.xcframework/*
+	zip -9 -r $(PACKAGE_DIR)/$(subst $(space),,$(PACKAGE_NAME)).zip WebRTC.xcframework/*
 
 .PHONY: patch
 patch: common-patch
@@ -36,3 +36,4 @@ patch: common-patch
 build: patch
 	cd $(SRC_DIR)/tools_webrtc/ios && \
 	python3 build_ios_libs.py -o $(BUILD_DIR) --build_config release --extra-gn-args '$(EXTRA_GN_ARGS) $(CC_WRAPPER)'
+
diff --git a/build/linux-arm64/Makefile b/build/linux-arm64/Makefile
index 7015f99..611c6e9 100644
--- a/build/linux-arm64/Makefile
+++ b/build/linux-arm64/Makefile
@@ -12,8 +12,9 @@ include ../common.mk
 EXTRA_GN_ARGS := \
 	target_os="$(TARGET_OS)" \
 	target_cpu="$(TARGET_CPU)" \
-	rtc_use_h264=true \
-	rtc_use_x11=true \
+	is_debug=false \
+	$(RTC_USE_H264) \
+	$(RTC_USE_X11) \
 	rtc_include_tests=false \
 	rtc_build_tools=false \
 	rtc_build_examples=false \
@@ -42,13 +43,9 @@ patch: common-patch
 .PHONY: build
 build: download patch
 	cd $(SRC_DIR) && \
-	gn gen $(BUILD_DIR_DEBUG) --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER)' && \
-	gn gen $(BUILD_DIR_RELEASE) --args='$(EXTRA_GN_ARGS) is_debug=false $(CC_WRAPPER)' && \
-	ninja -C $(BUILD_DIR_DEBUG) && \
-	ninja -C $(BUILD_DIR_RELEASE)
+	gn gen $(BUILD_DIR) --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER)' && \
+	ninja -C $(BUILD_DIR)
 
-	cd $(BUILD_DIR_DEBUG)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_DEBUG)/obj/libwebrtc.a `find . -name '*.o'`
+	cd $(BUILD_DIR)/obj && \
+	/usr/bin/ar -rc $(BUILD_DIR)/obj/libwebrtc.a `find . -name '*.o'`
 
-	cd $(BUILD_DIR_RELEASE)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_RELEASE)/obj/libwebrtc.a `find . -name '*.o'`
\ No newline at end of file
diff --git a/build/linux-x64/Makefile b/build/linux-x64/Makefile
index f9d1f97..0388d8b 100644
--- a/build/linux-x64/Makefile
+++ b/build/linux-x64/Makefile
@@ -12,8 +12,9 @@ include ../common.mk
 EXTRA_GN_ARGS := \
 	target_os="$(TARGET_OS)" \
 	target_cpu="$(TARGET_CPU)" \
-	rtc_use_h264=true \
-	rtc_use_x11=true \
+	is_debug=false \
+	$(RTC_USE_H264) \
+	$(RTC_USE_X11) \
 	rtc_include_tests=false \
 	rtc_build_tools=false \
 	rtc_build_examples=false \
@@ -42,13 +43,9 @@ patch: common-patch
 .PHONY: build
 build: download patch
 	cd $(SRC_DIR) && \
-	gn gen $(BUILD_DIR_DEBUG) --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER)' && \
-	gn gen $(BUILD_DIR_RELEASE) --args='$(EXTRA_GN_ARGS) is_debug=false $(CC_WRAPPER)' && \
-	ninja -C $(BUILD_DIR_DEBUG) && \
-	ninja -C $(BUILD_DIR_RELEASE)
-	
-	cd $(BUILD_DIR_DEBUG)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_DEBUG)/obj/libwebrtc.a `find . -name '*.o'`
-
-	cd $(BUILD_DIR_RELEASE)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_RELEASE)/obj/libwebrtc.a `find . -name '*.o'`
\ No newline at end of file
+	gn gen $(BUILD_DIR) --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER)' && \
+	ninja -C $(BUILD_DIR)
+
+	cd $(BUILD_DIR)/obj && \
+	/usr/bin/ar -rc $(BUILD_DIR)/obj/libwebrtc.a `find . -name '*.o'`
+
diff --git a/build/macos-arm64/Makefile b/build/macos-arm64/Makefile
index 69ca0b1..6105f5c 100644
--- a/build/macos-arm64/Makefile
+++ b/build/macos-arm64/Makefile
@@ -14,8 +14,9 @@ EXTRA_GN_ARGS := \
 	target_cpu="$(TARGET_CPU)" \
 	enable_stripping=true \
 	enable_dsyms=true \
+	is_debug=false \
 	treat_warnings_as_errors=false \
-	rtc_use_h264=true \
+	$(RTC_USE_H264) \
 	rtc_include_tests=false \
 	rtc_build_tools=false \
 	rtc_build_examples=false \
@@ -33,10 +34,17 @@ all: clean build package
 .PHONY: package
 package: copy
 	cd $(PACKAGE_DIR) && \
-	tar -czvf $(subst $(space),,$(PACKAGE_NAME)).tar.gz include debug release NOTICE VERSION
+	tar -Jcf $(subst $(space),,$(PACKAGE_NAME)).tar.xz include lib NOTICE VERSION Frameworks
 
 .PHONY: copy
 copy: common-copy
+	rm -f $(PACKAGE_DIR)/lib/libboringssl.a
+	rm -rf $(PACKAGE_DIR)/Frameworks/WebRTC.xcframework
+	xcodebuild \
+	  -create-xcframework \
+	  -framework $(BUILD_DIR)/WebRTC.framework \
+	  -debug-symbols $(BUILD_DIR)/WebRTC.dSYM \
+	  -output $(PACKAGE_DIR)/Frameworks/WebRTC.xcframework
 
 .PHONY: patch
 patch: common-patch
@@ -46,27 +54,17 @@ patch: common-patch
 .PHONY: build
 build: patch
 	cd $(SRC_DIR) && \
-	gn gen $(BUILD_DIR_DEBUG) --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER)' && \
-	gn gen $(BUILD_DIR_RELEASE) --args='$(EXTRA_GN_ARGS) is_debug=false $(CC_WRAPPER)' && \
-	ninja -C $(BUILD_DIR_DEBUG) && \
-	ninja -C $(BUILD_DIR_DEBUG) \
-		api/audio_codecs:builtin_audio_decoder_factory \
-		api/task_queue:default_task_queue_factory \
-		sdk:native_api \
-		sdk:default_codec_factory_objc \
-		pc:peerconnection \
-		sdk:videocapture_objc \
-		sdk:mac_framework_objc && \
-	ninja -C $(BUILD_DIR_RELEASE) && \
-	ninja -C $(BUILD_DIR_RELEASE) \
-		api/audio_codecs:builtin_audio_decoder_factory \
-		api/task_queue:default_task_queue_factory \
-		sdk:native_api \
-		sdk:default_codec_factory_objc \
-		pc:peerconnection \
-		sdk:videocapture_objc \
-		sdk:mac_framework_objc
-	cd $(BUILD_DIR_DEBUG)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_DEBUG)/obj/libwebrtc.a `find . -name '*.o'`
-	cd $(BUILD_DIR_RELEASE)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_RELEASE)/obj/libwebrtc.a `find . -name '*.o'`
+	gn gen $(BUILD_DIR) --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER)' && \
+	ninja -C $(BUILD_DIR) && \
+	ninja -C $(BUILD_DIR) \
+	  api/audio_codecs:builtin_audio_decoder_factory \
+	  api/task_queue:default_task_queue_factory \
+	  sdk:native_api \
+	  sdk:default_codec_factory_objc \
+	  pc:peerconnection \
+	  sdk:videocapture_objc \
+	  sdk:mac_framework_objc
+
+	cd $(BUILD_DIR)/obj && \
+	/usr/bin/ar -rc $(BUILD_DIR)/obj/libwebrtc.a `find . -name '*.o'`
+
diff --git a/build/macos-x64/Makefile b/build/macos-x64/Makefile
index 61f3f82..cd78061 100644
--- a/build/macos-x64/Makefile
+++ b/build/macos-x64/Makefile
@@ -14,8 +14,9 @@ EXTRA_GN_ARGS := \
 	target_cpu="$(TARGET_CPU)" \
 	enable_stripping=true \
 	enable_dsyms=true \
+	is_debug=false \
 	treat_warnings_as_errors=false \
-	rtc_use_h264=true \
+	$(RTC_USE_H264) \
 	rtc_include_tests=false \
 	rtc_build_tools=false \
 	rtc_build_examples=false \
@@ -33,10 +34,17 @@ all: clean build package
 .PHONY: package
 package: copy
 	cd $(PACKAGE_DIR) && \
-	tar -czvf $(subst $(space),,$(PACKAGE_NAME)).tar.gz include debug release NOTICE VERSION
+	tar -Jcf $(subst $(space),,$(PACKAGE_NAME)).tar.xz include lib NOTICE VERSION Frameworks
 
 .PHONY: copy
 copy: common-copy
+	rm -f $(PACKAGE_DIR)/lib/libboringssl.a
+	rm -rf $(PACKAGE_DIR)/Frameworks/WebRTC.xcframework
+	xcodebuild \
+	  -create-xcframework \
+	  -framework $(BUILD_DIR)/WebRTC.framework \
+	  -debug-symbols $(BUILD_DIR)/WebRTC.dSYM \
+	  -output $(PACKAGE_DIR)/Frameworks/WebRTC.xcframework
 
 .PHONY: patch
 patch: common-patch
@@ -46,27 +54,17 @@ patch: common-patch
 .PHONY: build
 build: patch
 	cd $(SRC_DIR) && \
-	gn gen $(BUILD_DIR_DEBUG) --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER)' && \
-	gn gen $(BUILD_DIR_RELEASE) --args='$(EXTRA_GN_ARGS) is_debug=false $(CC_WRAPPER)' && \
-	ninja -C $(BUILD_DIR_DEBUG) && \
-	ninja -C $(BUILD_DIR_DEBUG) \
-		api/audio_codecs:builtin_audio_decoder_factory \
-		api/task_queue:default_task_queue_factory \
-		sdk:native_api \
-		sdk:default_codec_factory_objc \
-		pc:peerconnection \
-		sdk:videocapture_objc \
-		sdk:mac_framework_objc && \
-	ninja -C $(BUILD_DIR_RELEASE) && \
-	ninja -C $(BUILD_DIR_RELEASE) \
-		api/audio_codecs:builtin_audio_decoder_factory \
-		api/task_queue:default_task_queue_factory \
-		sdk:native_api \
-		sdk:default_codec_factory_objc \
-		pc:peerconnection \
-		sdk:videocapture_objc \
-		sdk:mac_framework_objc
-	cd $(BUILD_DIR_DEBUG)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_DEBUG)/obj/libwebrtc.a `find . -name '*.o'`
-	cd $(BUILD_DIR_RELEASE)/obj && \
-	/usr/bin/ar -rc $(BUILD_DIR_RELEASE)/obj/libwebrtc.a `find . -name '*.o'`
+	gn gen $(BUILD_DIR) --args='$(EXTRA_GN_ARGS) $(CC_WRAPPER)' && \
+	ninja -C $(BUILD_DIR) && \
+	ninja -C $(BUILD_DIR) \
+	  api/audio_codecs:builtin_audio_decoder_factory \
+	  api/task_queue:default_task_queue_factory \
+	  sdk:native_api \
+	  sdk:default_codec_factory_objc \
+	  pc:peerconnection \
+	  sdk:videocapture_objc \
+	  sdk:mac_framework_objc
+
+	cd $(BUILD_DIR)/obj && \
+	/usr/bin/ar -rc $(BUILD_DIR)/obj/libwebrtc.a `find . -name '*.o'`
+
diff --git a/config/android/webrtc_fetch b/config/android/webrtc_fetch
new file mode 100644
index 0000000..1470d3e
--- /dev/null
+++ b/config/android/webrtc_fetch
@@ -0,0 +1 @@
+webrtc_android
diff --git a/config/ios/webrtc_fetch b/config/ios/webrtc_fetch
new file mode 100644
index 0000000..e8780bc
--- /dev/null
+++ b/config/ios/webrtc_fetch
@@ -0,0 +1 @@
+webrtc_ios
diff --git a/config/linux-arm/webrtc_fetch b/config/linux-arm/webrtc_fetch
new file mode 100644
index 0000000..d9bb4a8
--- /dev/null
+++ b/config/linux-arm/webrtc_fetch
@@ -0,0 +1 @@
+webrtc
diff --git a/config/linux-arm64/webrtc_fetch b/config/linux-arm64/webrtc_fetch
new file mode 100644
index 0000000..d9bb4a8
--- /dev/null
+++ b/config/linux-arm64/webrtc_fetch
@@ -0,0 +1 @@
+webrtc
diff --git a/config/linux-x64/webrtc_fetch b/config/linux-x64/webrtc_fetch
new file mode 100644
index 0000000..d9bb4a8
--- /dev/null
+++ b/config/linux-x64/webrtc_fetch
@@ -0,0 +1 @@
+webrtc
diff --git a/config/macos-arm64/webrtc_fetch b/config/macos-arm64/webrtc_fetch
new file mode 100644
index 0000000..d9bb4a8
--- /dev/null
+++ b/config/macos-arm64/webrtc_fetch
@@ -0,0 +1 @@
+webrtc
diff --git a/config/macos-x64/webrtc_fetch b/config/macos-x64/webrtc_fetch
new file mode 100644
index 0000000..d9bb4a8
--- /dev/null
+++ b/config/macos-x64/webrtc_fetch
@@ -0,0 +1 @@
+webrtc
diff --git a/disk_cleanup.ps1 b/disk_cleanup.ps1
index 711986a..3ba1554 100644
--- a/disk_cleanup.ps1
+++ b/disk_cleanup.ps1
@@ -1,13 +1,13 @@
-Get-PSDrive
-
-# Cache 済み Docker Image の削除
-docker rmi $(docker images -q -a)
-
-# Android SDK の削除
-Remove-Item -Recurse -Force $Env:ANDROID_NDK_HOME
-
-# JVM の削除
-Remove-Item -Recurse -Force $Env:JAVA_HOME_11_X64
-Remove-Item -Recurse -Force $Env:JAVA_HOME_8_X64
-
-Get-PSDrive
+Get-PSDrive
+
+# Cache 済み Docker Image の削除
+docker rmi $(docker images -q -a)
+
+# Android SDK の削除
+Remove-Item -Recurse -Force $Env:ANDROID_NDK_HOME
+
+# JVM の削除
+Remove-Item -Recurse -Force $Env:JAVA_HOME_11_X64
+Remove-Item -Recurse -Force $Env:JAVA_HOME_8_X64
+
+Get-PSDrive
diff --git a/disk_cleanup.sh b/disk_cleanup.sh
index b7e44e3..41195ff 100755
--- a/disk_cleanup.sh
+++ b/disk_cleanup.sh
@@ -2,6 +2,9 @@
 
 df -h
 
+# Cache 済み Docker Image の削除
+docker rmi $(docker images -q -a)
+
 # Boost の削除
 sudo rm -rf /usr/local/share/boost
 
diff --git a/docker/.gitignore b/docker/.gitignore
index 664eda8..c5acd97 100644
--- a/docker/.gitignore
+++ b/docker/.gitignore
@@ -1,6 +1,8 @@
+/VERSION
+/LICENSE
+/NOTICE
 /build/
-/patch/
+/config/
 /scripts/
+/patch/
 /Dockerfile
-/NOTICE
-/VERSION
diff --git a/docker/Makefile b/docker/Makefile
index 020e8ef..5249aa7 100644
--- a/docker/Makefile
+++ b/docker/Makefile
@@ -46,11 +46,11 @@ define generateRules
 
 .PHONY: $(1).prepare
 $(1).prepare:
-	rm -rf VERSION build scripts Dockerfile
-	cp -a ../VERSION ../build ../scripts .
+	rm -rf VERSION LICENSE build config scripts Dockerfile
+	cp -a ../VERSION ../LICENSE ../build ../config ../scripts .
 	cp -a ./${1}/Dockerfile ./
-	DOCKER_BUILDKIT=1 $(DOCKER) build --pull -t libwebrtc-$(1):$(IMAGE_VERSION) .
-	rm -rf VERSION build scripts Dockerfile
+	DOCKER_BUILDKIT=1 $(DOCKER) build -t libwebrtc-$(1):$(IMAGE_VERSION) .
+	rm -rf VERSION LICENSE build config scripts Dockerfile
 
 .PHONY: $(1).edit
 $(1).edit: $(1).prepare
@@ -77,3 +77,4 @@ endef
 endif
 
 $(foreach pkg, $(DOCKER_PACKAGE_NAMES), $(eval $(call generateRules,$(pkg))))
+
diff --git a/docker/android/Dockerfile b/docker/android/Dockerfile
index a87b855..f3d7f1a 100644
--- a/docker/android/Dockerfile
+++ b/docker/android/Dockerfile
@@ -1,10 +1,9 @@
+# syntax = docker/dockerfile:experimental
 FROM ubuntu:20.04
 
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN rm -f /etc/apt/apt.conf.d/docker-clean \
- && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' \
-    > /etc/apt/apt.conf.d/keep-cache
+RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
 
 RUN \
   apt update \
@@ -26,9 +25,12 @@ RUN \
 
 RUN update-java-alternatives -s java-1.11.0-openjdk-amd64
 
+COPY config/android/ /root/config/android/
 COPY build/ /root/build/
-COPY Makefile VERSION /root/
+COPY Makefile VERSION LICENSE /root/
 COPY scripts/ /root/scripts/
 
-RUN cd /root/ \
- && make USE_CCACHE=0 -C build android.fetch
+RUN \
+  cd /root \
+  && make -C build android.fetch
+
diff --git a/docker/linux-arm64/Dockerfile b/docker/linux-arm64/Dockerfile
index 1b45e2d..23729fa 100644
--- a/docker/linux-arm64/Dockerfile
+++ b/docker/linux-arm64/Dockerfile
@@ -1,10 +1,9 @@
+# syntax = docker/dockerfile:experimental
 FROM ubuntu:20.04
 
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN rm -f /etc/apt/apt.conf.d/docker-clean \
- && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' \
-    > /etc/apt/apt.conf.d/keep-cache
+RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
 
 RUN \
   apt update \
@@ -20,9 +19,12 @@ RUN \
     rsync \
     cmake
 
+COPY config/linux-arm64/ /root/config/linux-arm64/
 COPY build/ /root/build/
-COPY Makefile VERSION /root/
+COPY Makefile VERSION LICENSE /root/
 COPY scripts/ /root/scripts/
 
-RUN cd /root/ \
- && make USE_CCACHE=0 -C build linux-arm64.fetch
+RUN \
+  cd /root \
+  && make -C build linux-arm64.fetch
+
diff --git a/docker/linux-x64/Dockerfile b/docker/linux-x64/Dockerfile
index 6ae7806..2f3175e 100644
--- a/docker/linux-x64/Dockerfile
+++ b/docker/linux-x64/Dockerfile
@@ -1,10 +1,9 @@
+# syntax = docker/dockerfile:experimental
 FROM ubuntu:20.04
 
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN rm -f /etc/apt/apt.conf.d/docker-clean \
- && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' \
-    > /etc/apt/apt.conf.d/keep-cache
+RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
 
 RUN \
   apt update \
@@ -20,9 +19,12 @@ RUN \
     rsync \
     cmake
 
+COPY config/linux-x64/ /root/config/linux-x64/
 COPY build/ /root/build/
-COPY Makefile VERSION /root/
+COPY Makefile VERSION LICENSE /root/
 COPY scripts/ /root/scripts/
 
-RUN cd /root/ \
- && make USE_CCACHE=0 -C build linux-x64.fetch
+RUN \
+  cd /root \
+  && make -C build linux-x64.fetch
+
diff --git a/instrumentisto-libwebrtc-bin.podspec b/instrumentisto-libwebrtc-bin.podspec
deleted file mode 100644
index 4348b6b..0000000
--- a/instrumentisto-libwebrtc-bin.podspec
+++ /dev/null
@@ -1,20 +0,0 @@
-Pod::Spec.new do |spec|
-  spec.name = "instrumentisto-libwebrtc-bin"
-  spec.version = "108.0.5359.124"
-  spec.summary = "Pre-compiled `libwebrtc` library for Darwin used by Medea Flutter-WebRTC."
-
-  spec.homepage = "https://github.com/instrumentisto/libwebrtc-bin"
-  spec.license = { :type => 'BSD', :file => 'WebRTC.xcframework/LICENSE.md' }
-  spec.author = { 'Instrumentisto Team' => 'developer@instrumentisto.com' }
-  spec.ios.deployment_target = '10.0'
-
-  spec.source = { :http => "https://github.com/instrumentisto/libwebrtc-bin/releases/download/108.0.5359.124/libwebrtc-ios.zip" }
-  spec.vendored_frameworks = "WebRTC.xcframework"
-
-  spec.pod_target_xcconfig = {
-    'EXCLUDED_ARCHS[sdk=iphonesimulator*]' => 'arm64 i386',
-  }
-  spec.user_target_xcconfig = {
-    'EXCLUDED_ARCHS[sdk=iphonesimulator*]' => 'arm64 i386',
-  }
-end
diff --git a/jitpack.yml b/jitpack.yml
index a143b37..ffc0b14 100644
--- a/jitpack.yml
+++ b/jitpack.yml
@@ -1,2 +1,2 @@
 install:
-  - ./publishAar.sh
+   - ./publishAar.sh
diff --git a/patch/add_licenses.patch b/patch/add_licenses.patch
index f6e8287..104c58e 100644
--- a/patch/add_licenses.patch
+++ b/patch/add_licenses.patch
@@ -23,4 +23,3 @@ index 86b4cd01f0..ece2fc710f 100755
      'opus': ['third_party/opus/src/COPYING'],
      'pffft': ['third_party/pffft/LICENSE'],
      'protobuf': ['third_party/protobuf/LICENSE'],
-     
\ No newline at end of file
diff --git a/patch/webrtc_voice_engine.patch b/patch/webrtc_voice_engine.patch
deleted file mode 100644
index 228c87b..0000000
--- a/patch/webrtc_voice_engine.patch
+++ /dev/null
@@ -1,18 +0,0 @@
---- a/src/media/engine/webrtc_voice_engine.cc
-+++ b/src/media/engine/webrtc_voice_engine.cc
-@@ -471,6 +471,7 @@ void WebRtcVoiceEngine::ApplyOptions(const AudioOptions& options_in) {
-   }
- #endif
- 
-+#if !defined(WEBRTC_WIN)
-   if (options.echo_cancellation) {
-     // Check if platform supports built-in EC. Currently only supported on
-     // Android and in combination with Java based audio layer.
-@@ -491,6 +492,7 @@ void WebRtcVoiceEngine::ApplyOptions(const AudioOptions& options_in) {
-       }
-     }
-   }
-+#endif
- 
-   if (options.auto_gain_control) {
-     bool built_in_agc_avaliable = adm()->BuiltInAGCIsAvailable();
diff --git a/patch/win_dynamic_crt.patch b/patch/win_dynamic_crt.patch
deleted file mode 100644
index 53d0974..0000000
--- a/patch/win_dynamic_crt.patch
+++ /dev/null
@@ -1,11 +0,0 @@
---- a/src/build/config/win/BUILD.gn
-+++ b/src/build/config/win/BUILD.gn
-@@ -470,7 +470,7 @@ config("default_crt") {
-       configs = [ ":dynamic_crt" ]
-     } else {
-       # Desktop Windows: static CRT.
--      configs = [ ":static_crt" ]
-+      configs = [ ":dynamic_crt" ]
-     }
-   }
- }
diff --git a/publishAar.sh b/publishAar.sh
index e1662a1..8fbadae 100755
--- a/publishAar.sh
+++ b/publishAar.sh
@@ -1,19 +1,27 @@
 #!/bin/bash
 
-set -ex
+set -x
 
-VERSION=$(grep 'WEBRTC_VERSION=' VERSION | cut -d '=' -f2 | tr -d '\n')
+while IFS="=" read -r key value; do
+    case "$key" in
+      "WEBRTC_SEMANTIC_VERSION") VERSION="$value" ;;
+    esac
+  done < ./VERSION
 
-AAR_URL="https://github.com/instrumentisto/libwebrtc-bin/releases/download/${VERSION}/libwebrtc-android.tar.gz"
+AAR_URL=https://github.com/crow-misia/libwebrtc-bin/releases/download/${VERSION}/libwebrtc-android.tar.xz
 
-mkdir -p package/
-cd package/
+echo AAR_URL=${AAR_URL}
 
-curl -fL -O "${AAR_URL}"
-tar xf libwebrtc-android.tar.gz
+mkdir -p package
+cd package
+
+curl -L -O ${AAR_URL}
+tar xf libwebrtc-android.tar.xz
+
+mvn install:install-file \
+    -Dfile=aar/libwebrtc.aar \
+    -Dpackaging=aar \
+    -Dversion=${VERSION} \
+    -DgroupId=com.github.crow-misia \
+    -DartifactId=libwebrtc-bin
 
-mvn install:install-file -Dfile=aar/libwebrtc.aar \
-                         -Dpackaging=aar \
-                         -Dversion=${VERSION} \
-                         -DgroupId=com.github.instrumentisto \
-                         -DartifactId=libwebrtc-bin
diff --git a/scripts/fetch_webrtc.sh b/scripts/fetch_webrtc.sh
index 22ad7cf..cecc0c4 100755
--- a/scripts/fetch_webrtc.sh
+++ b/scripts/fetch_webrtc.sh
@@ -1,39 +1,35 @@
 #!/bin/bash
 
-WEBRTC_DIR="$(cd $1 && pwd)"
-DEPOT_TOOLS_DIR="$(cd $2 && pwd)"
-WEBRTC_COMMIT="$3"
-case "$4" in
-  "android")             FETCH_TARGET="webrtc_android" ;;
-  "ios")                 FETCH_TARGET="webrtc_ios" ;;
-  "linux-"* | "macos-"*) FETCH_TARGET="webrtc" ;;
-  *) echo "Unknown build target: $4"; exit 1 ;;
-esac
+WEBRTC_DIR=$(cd $1 && pwd)
+DEPOT_TOOLS_DIR=$(cd $2 && pwd)
+WEBRTC_COMMIT=$3
+CONFIG_DIR=$(cd $4 && pwd)
+FETCH_TARGET=`cat ${CONFIG_DIR}/webrtc_fetch`
 
-mkdir -p "$WEBRTC_DIR"
-cd "$WEBRTC_DIR"
-if [ -f "$WEBRTC_DIR/.gclient" ]; then
-  echo "Syncing WebRTC..."
-  cd "$WEBRTC_DIR/src/"
-  git reset --hard
-  git clean -xdf
-  if [ -d "$WEBRTC_DIR/src/third_party" ]; then
-    cd "$WEBRTC_DIR/src/third_party/"
-    git reset --hard
-    git clean -xdf
+mkdir -p $WEBRTC_DIR
+cd $WEBRTC_DIR
+if [ -f $WEBRTC_DIR/.gclient ]; then
+  echo "Syncing webrtc ...";
+  cd $WEBRTC_DIR/src;
+  git reset --hard;
+  git clean -xdf;
+  if [ -d $WEBRTC_DIR/src/third_party ]; then
+    cd $WEBRTC_DIR/src/third_party;
+    git reset --hard;
+    git clean -xdf;
   fi
-  if [ -d "$WEBRTC_DIR/src/build" ]; then
-    cd "$WEBRTC_DIR/src/build/"
+  if [ -d $WEBRTC_DIR/src/build ]; then
+    cd $WEBRTC_DIR/src/build;
     git reset --hard;
     git clean -xdf;
   fi
 else
-  echo "Getting WebRTC...";
-  rm -f "$DEPOT_TOOLS_DIR/metrics.cfg"
-  rm -rf "$WEBRTC_DIR/src"
-  fetch --nohooks "$FETCH_TARGET"
+  echo "Getting WEBRTC ...";
+  rm -f $DEPOT_TOOLS_DIR/metrics.cfg;
+  rm -rf $WEBRTC_DIR/src;
+  fetch --nohooks $FETCH_TARGET;
 fi
-cd "$WEBRTC_DIR/src/"
+cd $WEBRTC_DIR/src
 git fetch
-git checkout -f "$WEBRTC_COMMIT"
+git checkout -f $WEBRTC_COMMIT
 yes | gclient sync -D
diff --git a/upgrade-ver.sh b/upgrade-ver.sh
deleted file mode 100755
index de76988..0000000
--- a/upgrade-ver.sh
+++ /dev/null
@@ -1,32 +0,0 @@
-#!/usr/bin/env bash
-
-set -e
-
-res=$(curl 'https://chromiumdash.appspot.com/fetch_releases?channel=Stable&platform=Linux&num=1&offset=0')
-
-newVersion=$(printf "$res" | jq -r '.[0].version')
-if [[ "$newVersion" = "null" ]]; then
-  echo -e "Wrong JSON response, no \`version\` field found.\nCheck the Chrome API and fix this \`.sh\` if needed and/or try again."
-  exit 1
-fi
-
-newCommit=$(printf "$res" | jq -r '.[0].hashes.webrtc')
-if [[ "$newCommit" = "null" ]]; then
-  echo -e "Wrong JSON response, no \`hashes.webrtc\` field found.\nCheck the Chrome API and fix this \`.sh\` if needed and/or try again."
-  exit 1
-fi
-
-sed -i.bk -e "s/^WEBRTC_VERSION=.*$/WEBRTC_VERSION=$newVersion/g" \
-          -e "s/^WEBRTC_COMMIT=.*$/WEBRTC_COMMIT=$newCommit/g" \
-    ./VERSION
-sed -i.bk -e "s/spec\.version =.*$/spec.version = \"$newVersion\"/g" \
-          -e "s/\/download\/.*\//\/download\/$newVersion\//g" \
-    ./instrumentisto-libwebrtc-bin.podspec
-
-echo "version=$newVersion"
-echo "commit=$newCommit"
-
-if [ ! -z "$GITHUB_OUTPUT" ]; then
-  echo "version=$newVersion" >> $GITHUB_OUTPUT
-  echo "commit=$newCommit" >> $GITHUB_OUTPUT
-fi
